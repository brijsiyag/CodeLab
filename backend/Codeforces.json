[
  {
    "name": "Robot Factory",
    "question_id": "robot-factory",
    "question": "You have received data from a Bubble bot. You know your task is to make factory facilities, but before you even start, you need to know how big the factory is and how many rooms it has. When you look at the data you see that you have the dimensions of the construction, which is in rectangle shape: N x M. Then in the next N lines you have M numbers. These numbers represent factory tiles and they can go from 0 to 15. Each of these numbers should be looked in its binary form. Because from each number you know on which side the tile has walls. For example number 10 in it's binary form is 1010, which means that it has a wall from the North side, it doesn't have a wall from the East, it has a wall on the South side and it doesn't have a wall on the West side. So it goes North, East, South, West. It is guaranteed that the construction always has walls on it's edges. The input will be correct. Your task is to print the size of the rooms from biggest to smallest. ",
    "input_details": "The first line has two numbers which are N and M, the size of the construction. Both are integers: n (1  n  10^3)m (1  m  10^3)Next N x M numbers represent each tile of construction.",
    "output_details": "Once you finish processing the data your output consists of one line sorted from biggest to smallest room sizes. ",
    "sample_input": "4 5\n9 14 11 12 13\n5 15 11 6 7\n5 9 14 9 14\n3 2 14 3 14",
    "sample_output": "9 4 4 2 1",
    "tags": ["bitmasks", "dfs and similar", "*1400"]
  },
  {
    "name": "Party Organization",
    "question_id": "party-organization",
    "question": "On the great island of Baltia, there live N people, numbered from 1 to N. There are exactly M pairs of people that are friends with each other. The people of Baltia want to organize a successful party, but they have very strict rules on what a party is and when the party is successful. On the island of Baltia, a party is a gathering of exactly 5 people. The party is considered to be successful if either all the people at the party are friends with each other (so that they can all talk to each other without having to worry about talking to someone they are not friends with) or no two people at the party are friends with each other (so that everyone can just be on their phones without anyone else bothering them). Please help the people of Baltia organize a successful party or tell them that it's impossible to do so.",
    "input_details": "The first line contains two integer numbers, N (5  N  2*10^5) and M (0  M  2*10^5) – the number of people that live in Baltia, and the number of friendships. The next M lines each contains two integers U_i and V_i (1  U_i,V_i  N) – meaning that person U_i is friends with person V_i. Two friends can not be in the list of friends twice (no pairs are repeated) and a person can be friends with themselves (U_i \\ne V_i).",
    "output_details": "If it's possible to organize a successful party, print 5 numbers indicating which 5 people should be invited to the party. If it's not possible to organize a successful party, print -1 instead. If there are multiple successful parties possible, print any.",
    "sample_input": "6 3\n1 4\n4 2\n5 4",
    "sample_output": "1 2 3 5 6",
    "tags": ["brute force", "math", "probabilities", "*2300"]
  },
  {
    "name": "Array Game",
    "question_id": "array-game",
    "question": "Alice and Bob are playing a game. They are given an array A of length N. The array consists of integers. They are building a sequence together. In the beginning, the sequence is empty. In one turn a player can remove a number from the left or right side of the array and append it to the sequence. The rule is that the sequence they are building must be strictly increasing. The winner is the player that makes the last move. Alice is playing first. Given the starting array, under the assumption that they both play optimally, who wins the game?",
    "input_details": "The first line contains one integer N (1  N  2*10^5) - the length of the array A.The second line contains N integers A_1, A_2,...,A_N (0  A_i  10^9)",
    "output_details": "The first and only line of output consists of one string, the name of the winner. If Alice won, print \"Alice\", otherwise, print \"Bob\".",
    "sample_input": "1\n5",
    "sample_output": "Alice",
    "tags": ["games", "greedy", "two pointers", "*1900"]
  },
  {
    "name": "Bob's Beautiful Array",
    "question_id": "bobs-beautiful-array",
    "question": "Bob really likes playing with arrays of numbers. That's why for his birthday, his friends bought him a really interesting machine – an array beautifier. The array beautifier takes an array A consisting of N integers, and it outputs a new array B of length N that it constructed based on the array given to it. The array beautifier constructs the new array in the following way: it takes two numbers at different indices from the original array and writes their sum to the end of the new array. It does this step N times - resulting in an output array of length N. During this process, the machine can take the same index multiple times in different steps. Bob was very excited about the gift that his friends gave him, so he put his favorite array in the machine. However, when the machine finished, Bob was not happy with the resulting array. He misses his favorite array very much, and hopes to get it back. Given the array that the machine outputted, help Bob find an array that could be the original array that he put in the machine. Sometimes the machine makes mistakes, so it is possible that no appropriate input array exists for the array it has outputted. In such case, let Bob know that his array is forever lost.",
    "input_details": "The first line contains one positive integer N (2  N  10^3) – the length of Bob's array.The second line contains N integers B_1, B_2, ..., B_N (1  B_i  10^6) – the elements of the array the machine outputted.",
    "output_details": "If an appropriate input array exists, print \"YES\", followed by the input array A_1, A_2, ..., A_N (-10^9  A_i  10^9) in the next line. Otherwise, print \"NO\".",
    "sample_input": "2\n5 5",
    "sample_output": "YES\n2 3",
    "tags": ["bitmasks", "brute force", "greedy", "*2600"]
  },
  {
    "name": "Desert",
    "question_id": "desert",
    "question": "You are given an undirected graph of N nodes and M edges, E_1, E_2, \\dots E_M.A connected graph is a cactus if each of it's edges belogs to at most one simple cycle. A graph is a desert if each of it's connected components is a cactus. Find the number of pairs (L, R), (1  L  R  M) such that, if we delete all the edges except for E_L, E_{L+1}, \\dots E_R, the graph is a desert. ",
    "input_details": "The first line contains two integers N and M (2  N  2.5 \\times 10^5, 1  M  5 \\times 10^5). Each of the next M lines contains two integers. The i-th line describes the i-th edge. It contains integers U_i and V_i, the nodes connected by the i-th edge (E_i=(U_i, V_i)). It is guaranteed that 1  U_i, V_i  N and U_i  V_i. ",
    "output_details": "The output contains one integer number – the answer.",
    "sample_input": "5 6\n1 2\n2 3\n3 4\n4 5\n5 1\n2 4",
    "sample_output": "20",
    "tags": ["data structures", "graphs", "*2700"]
  },
  {
    "name": "Hidden Fortress",
    "question_id": "hidden-fortress",
    "question": "This is an interactive problem!As part of your contribution in the Great Bubble War, you have been tasked with finding the newly built enemy fortress. The world you live in is a giant 10^9 \\times 10^9 grid, with squares having both coordinates between 1 and 10^9. You know that the enemy base has the shape of a rectangle, with the sides parallel to the sides of the grid. The people of your world are extremely scared of being at the edge of the world, so you know that the base doesn't contain any of the squares on the edges of the grid (the x or y coordinate being 1 or 10^9). To help you locate the base, you have been given a device that you can place in any square of the grid, and it will tell you the manhattan distance to the closest square of the base. The manhattan distance from square (a, b) to square (p, q) is calculated as |a−p|+|b−q|. If you try to place the device inside the enemy base, you will be captured by the enemy. Because of this, you need to make sure to never place the device inside the enemy base. Unfortunately, the device is powered by a battery and you can't recharge it. This means that you can use the device at most 40 times. ",
    "input_details": "The input contains the answers to your queries. ",
    "output_details": "ctionYour code is allowed to place the device on any square in the grid by writing \"? i j\" (1  i,j  10^9). In return, it will recieve the manhattan distance to the closest square of the enemy base from square (i,j) or -1 if the square you placed the device on is inside the enemy base or outside the grid. If you recieve -1 instead of a positive number, exit immidiately and you will see the wrong answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream.Your solution should use no more than 40 queries. Once you are sure where the enemy base is located, you should print \"! x y p q\" (1  x  p 10^9, 1  y  q 10^9), where (x, y) is the square inside the enemy base with the smallest x and y coordinates, and (p, q) is the square inside the enemy base with the largest x and y coordinates. Note that answering doesn't count as one of the 40 queries.After printing a query or printing the answer, do not forget to output end of line and flush the output. Otherwise, you will get idleness limit exceeded. To do this, use:   fflush(stdout) or cout.flush() in C++;  System.out.flush() in Java;  flush(output) in Pascal;  stdout.flush() in Python;  See the documentation for other languages.",
    "sample_input": "1\n1\n2\n1",
    "sample_output": "? 2 2\n? 5 5\n? 4 7\n? 1 5\n! 2 3 4 5",
    "tags": ["interactive", "math", "*2100"]
  },
  {
    "name": "Shortest path",
    "question_id": "shortest-path",
    "question": "You are given N points on an infinite plane with the Cartesian coordinate system on it. N-1 points lay on one line, and one point isn't on that line. You are on point K at the start, and the goal is to visit every point. You can move between any two points in a straight line, and you can revisit points. What is the minimum length of the path? ",
    "input_details": "The first line contains two integers: N (3  N  2*10^5) - the number of points, and K (1  K  N) - the index of the starting point.Each of the next N lines contain two integers, A_i, B_i (-10^6  A_i, B_i  10^6) - coordinates of the i-th point.",
    "output_details": "The output contains one number - the shortest path to visit all given points starting from point K. The absolute difference between your solution and the main solution shouldn't exceed 10^-6;",
    "sample_input": "5 2\n0 0\n-1 1\n2 -2\n0 1\n-2 2",
    "sample_output": "7.478709",
    "tags": ["brute force", "geometry", "math", "shortest paths", "*2700"]
  },
  {
    "name": "Mars",
    "question_id": "mars",
    "question": "In the year 2420 humans have finally built a colony on Mars thanks to the work of Elon Tusk. There are 10^9+7 cities arranged in a circle in this colony and none of them are connected yet. Elon Tusk wants to connect some of those cities using only roads of the same size in order to lower the production cost of those roads. Because of that he gave a list on N cites where some cites can appear more than once and Q queries that you need to answer. For the query you need to determine if it is possible to connect all the cities from L_{i} to R_{i} on that list using only roads of length D_{i}. ",
    "input_details": "The first line contains two integers N and Q (1  N, Q  2dot10^5 ) — the length of the array of cities and the number of queries you need to answer. The second lines contains N integers representing the array of cites. Next Q lines contain three integers L, R and D (1  L_{i}, R_{i}  N, 0  D_{i}  10^9+6) — the range of cities that needs to be connected and the length of the road that you can use. ",
    "output_details": "The output contains Q lines. If it is possible to connect all the cities from the i-th query can be connected with roads of length D_{i} the i-th line should contain the word \"Yes\", otherwise it should contain the word \"No\". ",
    "sample_input": "9 8\n17 0 12 6 10 8 2 4 5\n2 3 12\n2 3 6\n2 4 6\n4 6 2\n2 8 2\n1 2 17\n1 8 2\n9 9 14",
    "sample_output": "Yes\nNo\nYes\nYes\nYes\nYes\nNo\nYes",
    "tags": ["hashing", "*2700"]
  },
  {
    "name": "Two Arrays",
    "question_id": "two-arrays",
    "question": "You are given two integer arrays of length N, A1 and A2. You are also given Q queries of 4 types: 1 k l r x: set Ak_i:=min(Ak_i, x) for each l  i  r.2 k l r x: set Ak_i:=max(Ak_i, x) for each l  i  r.3 k l r x: set Ak_i:=Ak_i+x for each l  i  r.4 l r: find the (\\sum_{i=l}^r F(A1_i+A2_i)) \\% (10^9+7) where F(k) is the k-th Fibonacci number (F(0)=0, F(1)=1, F(k)=F(k-1)+F(k-2)), and x \\% y denotes the remainder of the division of x by y.You should process these queries and answer each query of the fourth type.",
    "input_details": "The first line contains two integers N and Q. (1  N, Q  5 \\times 10^4) The second line contains N integers, array A1_1, A1_2, \\dots A1_N. (0  A1_i  10^6)The third line contains N integers, array A2_1, A2_2, \\dots A2_N. (0  A2_i  10^6)The next Q lines describe the queries. Each line contains 5 or 3 integers, where the first integer denotes the type of the query. (k \\in \\{1, 2\\}, 1  l  r  N)For queries of type 1 and 2, 0  x  10^9 holds.For queries of type 3, −10^6  x  10^6 holds.It is guaranteed that after every query each number in arrays A1 and A2 will be nonnegative. ",
    "output_details": "Print the answer to each query of the fourth type, in separate lines. ",
    "sample_input": "3 4\n1 0 2\n2 1 0\n4 1 3\n3 2 2 2 3\n1 1 1 3 0\n4 1 3",
    "sample_output": "4\n4",
    "tags": ["data structures", "matrices", "*3200"]
  },
  {
    "name": "Bubble Popping",
    "question_id": "bubble-popping",
    "question": "There are N bubbles in a coordinate plane. Bubbles are so tiny that it can be assumed that each bubble is a point (X_i, Y_i). Q Bubble Cup finalists plan to play with the bubbles. Each finalist would link to use infinitely long Bubble Cup stick to pop some bubbles. The i-th finalist would like to place the stick in the direction of vector (dxi, dyi), and plays the following game until K_i bubbles are popped. The game starts with finalist placing the stick in the direction of vector (dx_i, dy_i), and sweeping it from the infinity to the left until it hits some bubble, which is immediately popped. It is guaranteed that only one bubble will be hit in this step. After that the finalist starts rotating the stick in the counter clockwise direction with the center of rotation in point where the previous bubble was popped. When the next bubble is hit, it is immediately popped and becomes the new center of rotation. The process continues until K_i bubbles have been popped. It is guaranteed that the stick won't hit two bubbles simultaneously in this process. For each finalist find which bubble would be popped the last. Note that each game starts with the configuration of all N bubbles, so the games don't depend on the previous games. ",
    "input_details": "The first line contains one integer N — the number of bubbles. (1  N  10^5)Each of the next N lines contains two integers. The i-th line contains integers X_i and Y_i — the coordinates of the i-th bubble. (-10^9  X_i, Y_i  10^9, (X_i, Y_i)  (X_j, Y_j) for i  j)The next line contains one integer Q — the number of finalists willing to play with the bubbles. (1  Q  10^5)Each of the next Q lines contains 3 integers. The i-th line contains integers dx_i, dy_i and K_i. (-10^9  dx_i, dy_i  10^9, 1  K_i  N)",
    "output_details": "For each of the Q finalists, print the index of the bubble which would be popped last, in the separate line. ",
    "sample_input": "4\n0 0\n1 0\n0 1\n1 1\n2\n1 -1 3\n-1 1 4",
    "sample_output": "4\n2",
    "tags": ["*3200"]
  },
  {
    "name": "Bubble Strike",
    "question_id": "bubble-strike",
    "question": "Little Johnny Bubbles enjoys spending hours in front of his computer playing video games. His favorite game is Bubble Strike, fast-paced bubble shooting online game for two players.Each game is set in one of the N maps, each having different terrain configuration. First phase of each game decides on which map the game will be played. The game system randomly selects three maps and shows them to the players. Each player must pick one of those three maps to be discarded. The game system then randomly selects one of the maps that were not picked by any of the players and starts the game.Johnny is deeply enthusiastic about the game and wants to spend some time studying maps, thus increasing chances to win games played on those maps. However, he also needs to do his homework, so he does not have time to study all the maps. That is why he asked himself the following question: \"What is the minimum number of maps I have to study, so that the probability to play one of those maps is at least P\"?Can you help Johnny find the answer for this question? You can assume Johnny's opponents do not know him, and they will randomly pick maps.",
    "input_details": "The first line contains two integers N (3  N  10^{3}) and P (0  P  1) – total number of maps in the game and probability to play map Johnny has studied. P will have at most four digits after the decimal point.",
    "output_details": "Output contains one integer number – minimum number of maps Johnny has to study.",
    "sample_input": "7 1.0000",
    "sample_output": "6",
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "ternary search",
      "*2000"
    ]
  },
  {
    "name": "Restaurant Game",
    "question_id": "restaurant-game",
    "question": "Alice and Bob always had hard time choosing restaurant for the dinner. Previously they performed Eenie Meenie Miney Mo game, but eventually as their restaurant list grew, they had to create a new game. This new game starts as they write restaurant names on N cards and align the cards in one line. Before the game begins, they both choose starting card and starting direction they are going to. They take turns in order one after another. After each turn, they move one card in their current direction. If they reach the end or beginning of the line of cards they change direction. Once they meet in a card, the card is marked for removal and is removed the first moment they both leave the card.  Example of how card is removed They repeat this process until there is only one restaurant card left. Since there are a lot of restaurant cards, they are bored to simulate this process over and over and need your help to determine the last card that remains. Can you help them? ",
    "input_details": "The first line of the input is one integer T (1  T  10^{4}) representing number of test cases. Each test case contains 3 lines: The first line contains an integer N representing initial number of cards. Next line contains two integer values A,B (0  A, B < N, 2  N  10^{18}) representing starting 0-based index of the card in the array. Last line contains two strings D_A, D_B \\in {\"left\", \"right\"} representing starting direction of their movement.",
    "output_details": "The output contains T integer number – the 0-based index of the last card that remains for every test case in order.",
    "sample_input": "1\n4\n0 1\nleft right",
    "sample_output": "0",
    "tags": ["*3100"]
  },
  {
    "name": "Weights",
    "question_id": "weights",
    "question": "You are given an array A of length N weights of masses A_1, A_2...A_N. No two weights have the same mass. You can put every weight on one side of the balance (left or right). You don't have to put weights in order A_1,...,A_N. There is also a string S consisting of characters \"L\" and \"R\", meaning that after putting the i-th weight (not A_i, but i-th weight of your choice) left or right side of the balance should be heavier. Find the order of putting the weights on the balance such that rules of string S are satisfied. ",
    "input_details": "The first line contains one integer N (1  N  2*10^5) - the length of the array A The second line contains N distinct integers: A_1, A_2,...,A_N (1  A_i  10^9) - the weights given The third line contains string S of length N consisting only of letters \"L\" and \"R\" - string determining which side of the balance should be heavier after putting the i-th weight of your choice",
    "output_details": "The output contains N lines. In every line, you should print one integer and one letter - integer representing the weight you are putting on the balance in that move and the letter representing the side of the balance where you are putting the weight. If there is no solution, print -1.",
    "sample_input": "5\n3 8 2 13 7\nLLRLL",
    "sample_output": "3 L\n2 R\n8 R\n13 L\n7 L",
    "tags": ["constructive algorithms", "greedy", "two pointers", "*2600"]
  },
  {
    "name": "The Sum of Good Numbers",
    "question_id": "the-sum-of-good-numbers",
    "question": "Let's call a positive integer good if there is no digit 0 in its decimal representation.For an array of a good numbers a, one found out that the sum of some two neighboring elements is equal to x (i.e. x = a_i + a_{i + 1} for some i). x had turned out to be a good number as well.Then the elements of the array a were written out one after another without separators into one string s. For example, if a = [12, 5, 6, 133], then s = 1256133.You are given a string s and a number x. Your task is to determine the positions in the string that correspond to the adjacent elements of the array that have sum x. If there are several possible answers, you can print any of them.",
    "input_details": "The first line contains the string s (2  |s|  5 dot 10^5).The second line contains an integer x (2  x < 10^{200000}).An additional constraint on the input: the answer always exists, i.e you can always select two adjacent substrings of the string s so that if you convert these substrings to integers, their sum is equal to x.",
    "output_details": "In the first line, print two integers l_1, r_1, meaning that the first term of the sum (a_i) is in the string s from position l_1 to position r_1.In the second line, print two integers l_2, r_2, meaning that the second term of the sum (a_{i + 1}) is in the string s from position l_2 to position r_2.",
    "sample_input": "1256133\n17",
    "sample_output": "1 2\n3 3",
    "tags": ["hashing", "math", "string suffix structures", "strings", "*3200"]
  },
  {
    "name": "RBS",
    "question_id": "rbs",
    "question": "A bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence (or, shortly, an RBS) is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example:  bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");  bracket sequences \")(\", \"(\" and \")\" are not. Let's denote the concatenation of two strings x and y as x+y. For example, \"()()\" + \")(\" = \"()())(\".You are given n bracket sequences s_1, s_2, \\dots, s_n. You can rearrange them in any order (you can rearrange only the strings themselves, but not the characters in them).Your task is to rearrange the strings in such a way that the string s_1 + s_2 + \\dots + s_n has as many non-empty prefixes that are RBS as possible.",
    "input_details": "The first line contains a single integer n (1  n  20).Then n lines follow, the i-th of them contains s_i — a bracket sequence (a string consisting of characters \"(\" and/or \")\". All sequences s_i are non-empty, their total length does not exceed 4 dot 10^5.",
    "output_details": "Print one integer — the maximum number of non-empty prefixes that are RBS for the string s_1 + s_2 + \\dots + s_n, if the strings s_1, s_2, \\dots, s_n can be rearranged arbitrarily.",
    "sample_input": "2\n(\n)",
    "sample_output": "1",
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "*2400"
    ]
  },
  {
    "name": "Staircases",
    "question_id": "staircases",
    "question": "You are given a matrix, consisting of n rows and m columns. The rows are numbered top to bottom, the columns are numbered left to right.Each cell of the matrix can be either free or locked.Let's call a path in the matrix a staircase if it:   starts and ends in the free cell;  visits only free cells;  has one of the two following structures:   the second cell is 1 to the right from the first one, the third cell is 1 to the bottom from the second one, the fourth cell is 1 to the right from the third one, and so on;  the second cell is 1 to the bottom from the first one, the third cell is 1 to the right from the second one, the fourth cell is 1 to the bottom from the third one, and so on.  In particular, a path, consisting of a single cell, is considered to be a staircase.Here are some examples of staircases:  Initially all the cells of the matrix are free.You have to process q queries, each of them flips the state of a single cell. So, if a cell is currently free, it makes it locked, and if a cell is currently locked, it makes it free.Print the number of different staircases after each query. Two staircases are considered different if there exists such a cell that appears in one path and doesn't appear in the other path.",
    "input_details": "The first line contains three integers n, m and q (1  n, m  1000; 1  q  10^4) — the sizes of the matrix and the number of queries.Each of the next q lines contains two integers x and y (1  x  n; 1  y  m) — the description of each query.",
    "output_details": "Print q integers — the i-th value should be equal to the number of different staircases after i queries. Two staircases are considered different if there exists such a cell that appears in one path and doesn't appear in the other path.",
    "sample_input": "2 2 8\n1 1\n1 1\n1 1\n2 2\n1 1\n1 2\n2 1\n1 1",
    "sample_output": "5\n10\n5\n2\n5\n3\n1\n0",
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "*2100"
    ]
  },
  {
    "name": "Training Session",
    "question_id": "training-session",
    "question": "Monocarp is the coach of the Berland State University programming teams. He decided to compose a problemset for a training session for his teams.Monocarp has n problems that none of his students have seen yet. The i-th problem has a topic a_i (an integer from 1 to n) and a difficulty b_i (an integer from 1 to n). All problems are different, that is, there are no two tasks that have the same topic and difficulty at the same time.Monocarp decided to select exactly 3 problems from n problems for the problemset. The problems should satisfy at least one of two conditions (possibly, both):  the topics of all three selected problems are different;  the difficulties of all three selected problems are different. Your task is to determine the number of ways to select three problems for the problemset.",
    "input_details": "The first line contains a single integer t (1  t  50000) — the number of testcases.The first line of each testcase contains an integer n (3  n  2 dot 10^5) — the number of problems that Monocarp have.In the i-th of the following n lines, there are two integers a_i and b_i (1  a_i, b_i  n) — the topic and the difficulty of the i-th problem.It is guaranteed that there are no two problems that have the same topic and difficulty at the same time.The sum of n over all testcases doesn't exceed 2 dot 10^5.",
    "output_details": "Print the number of ways to select three training problems that meet either of the requirements described in the statement.",
    "sample_input": "2\n4\n2 4\n3 4\n2 1\n1 3\n5\n1 5\n2 4\n3 3\n4 2\n5 1",
    "sample_output": "3\n10",
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math",
      "*1700"
    ]
  },
  {
    "name": "Delete Two Elements",
    "question_id": "delete-two-elements",
    "question": "Monocarp has got an array a consisting of n integers. Let's denote k as the mathematic mean of these elements (note that it's possible that k is not an integer). The mathematic mean of an array of n elements is the sum of elements divided by the number of these elements (i. e. sum divided by n).Monocarp wants to delete exactly two elements from a so that the mathematic mean of the remaining (n - 2) elements is still equal to k.Your task is to calculate the number of pairs of positions [i, j] (i < j) such that if the elements on these positions are deleted, the mathematic mean of (n - 2) remaining elements is equal to k (that is, it is equal to the mathematic mean of n elements of the original array a).",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of testcases.The first line of each testcase contains one integer n (3  n  2 dot 10^5) — the number of elements in the array.The second line contains a sequence of integers a_1, a_2, \\dots, a_n (0  a_i  10^{9}), where a_i is the i-th element of the array.The sum of n over all testcases doesn't exceed 2 dot 10^5.",
    "output_details": "Print one integer — the number of pairs of positions [i, j] (i < j) such that if the elements on these positions are deleted, the mathematic mean of (n - 2) remaining elements is equal to k (that is, it is equal to the mathematic mean of n elements of the original array a).",
    "sample_input": "4\n4\n8 8 8 8\n3\n50 20 10\n5\n1 4 7 3 5\n7\n1 2 3 4 5 6 7",
    "sample_output": "6\n0\n2\n3",
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers",
      "*1200"
    ]
  },
  {
    "name": "Groups",
    "question_id": "groups",
    "question": "n students attended the first meeting of the Berland SU programming course (n is even). All students will be divided into two groups. Each group will be attending exactly one lesson each week during one of the five working days (Monday, Tuesday, Wednesday, Thursday and Friday), and the days chosen for the groups must be different. Furthermore, both groups should contain the same number of students.Each student has filled a survey in which they told which days of the week are convenient for them to attend a lesson, and which are not. Your task is to determine if it is possible to choose two different week days to schedule the lessons for the group (the first group will attend the lesson on the first chosen day, the second group will attend the lesson on the second chosen day), and divide the students into two groups, so the groups have equal sizes, and for each student, the chosen lesson day for their group is convenient.",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of testcases.Then the descriptions of t testcases follow.The first line of each testcase contains one integer n (2  n  1\\,000) — the number of students.The i-th of the next n lines contains 5 integers, each of them is 0 or 1. If the j-th integer is 1, then the i-th student can attend the lessons on the j-th day of the week. If the j-th integer is 0, then the i-th student cannot attend the lessons on the j-th day of the week. Additional constraints on the input: for each student, at least one of the days of the week is convenient, the total number of students over all testcases doesn't exceed 10^5.",
    "output_details": "For each testcase print an answer. If it's possible to divide the students into two groups of equal sizes and choose different days for the groups so each student can attend the lesson in the chosen day of their group, print \"YES\" (without quotes). Otherwise, print \"NO\" (without quotes). ",
    "sample_input": "2\n4\n1 0 0 1 0\n0 1 0 0 1\n0 0 0 1 0\n0 1 0 1 0\n2\n0 0 0 1 0\n0 0 0 1 0",
    "sample_output": "YES\nNO",
    "tags": ["brute force", "implementation", "*1000"]
  },
  {
    "name": "Computer Game",
    "question_id": "computer-game",
    "question": "Monocarp is playing a computer game. Now he wants to complete the first level of this game.A level is a rectangular grid of 2 rows and n columns. Monocarp controls a character, which starts in cell (1, 1) — at the intersection of the 1-st row and the 1-st column.Monocarp's character can move from one cell to another in one step if the cells are adjacent by side and/or corner. Formally, it is possible to move from cell (x_1, y_1) to cell (x_2, y_2) in one step if |x_1 - x_2|  1 and |y_1 - y_2|  1. Obviously, it is prohibited to go outside the grid.There are traps in some cells. If Monocarp's character finds himself in such a cell, he dies, and the game ends.To complete a level, Monocarp's character should reach cell (2, n) — at the intersection of row 2 and column n.Help Monocarp determine if it is possible to complete the level.",
    "input_details": "The first line contains a single integer t (1  t  100) — the number of test cases. Then the test cases follow. Each test case consists of three lines.The first line contains a single integer n (3  n  100) — the number of columns.The next two lines describe the level. The i-th of these lines describes the i-th line of the level — the line consists of the characters '0' and '1'. The character '0' corresponds to a safe cell, the character '1' corresponds to a trap cell.Additional constraint on the input: cells (1, 1) and (2, n) are safe.",
    "output_details": "For each test case, output YES if it is possible to complete the level, and NO otherwise.",
    "sample_input": "4\n3\n000\n000\n4\n0011\n1100\n4\n0111\n1110\n6\n010101\n101010",
    "sample_output": "YES\nYES\nNO\nYES",
    "tags": ["brute force", "dfs and similar", "dp", "implementation", "*800"]
  },
  {
    "name": "Ideal Farm",
    "question_id": "ideal-farm",
    "question": "Theofanis decided to visit his uncle's farm. There are s animals and n animal pens on the farm. For utility purpose, animal pens are constructed in one row.Uncle told Theofanis that a farm is lucky if you can distribute all animals in all pens in such a way that there are no empty pens and there is at least one continuous segment of pens that has exactly k animals in total.Moreover, a farm is ideal if it's lucky for any distribution without empty pens.Neither Theofanis nor his uncle knows if their farm is ideal or not. Can you help them to figure it out?",
    "input_details": "The first line contains a single integer t (1  t  10^5) — the number of test cases.The first and only line of each test case contains three integers s, n, and k (1  s, n, k  10^{18}; n  s).",
    "output_details": "For each test case, print YES (case-insensitive), if the farm is ideal, or NO (case-insensitive) otherwise.",
    "sample_input": "4\n1 1 1\n1 1 2\n100 50 200\n56220 47258 14497",
    "sample_output": "YES\nNO\nNO\nYES",
    "tags": ["constructive algorithms", "math", "*2400"]
  },
  {
    "name": " Rubik's Cube Coloring (hard version)",
    "question_id": "rubiks-cube-coloring-hard-version",
    "question": "It is the hard version of the problem. The difference is that in this version, there are nodes with already chosen colors.Theofanis is starving, and he wants to eat his favorite food, sheftalia. However, he should first finish his homework. Can you help him with this problem?You have a perfect binary tree of 2^k - 1 nodes — a binary tree where all vertices i from 1 to 2^{k - 1} - 1 have exactly two children: vertices 2i and 2i + 1. Vertices from 2^{k - 1} to 2^k - 1 don't have any children. You want to color its vertices with the 6 Rubik's cube colors (White, Green, Red, Blue, Orange and Yellow).Let's call a coloring good when all edges connect nodes with colors that are neighboring sides in the Rubik's cube.  A picture of Rubik's cube and its 2D map. More formally:   a white node can not be neighboring with white and yellow nodes;  a yellow node can not be neighboring with white and yellow nodes;  a green node can not be neighboring with green and blue nodes;  a blue node can not be neighboring with green and blue nodes;  a red node can not be neighboring with red and orange nodes;  an orange node can not be neighboring with red and orange nodes; However, there are n special nodes in the tree, colors of which are already chosen.You want to calculate the number of the good colorings of the binary tree. Two colorings are considered different if at least one node is colored with a different color.The answer may be too large, so output the answer modulo 10^9+7.",
    "input_details": "The first line contains the integers k (1  k  60) — the number of levels in the perfect binary tree you need to color.The second line contains the integer n (1  n  \\min(2^k - 1, 2000)) — the number of nodes, colors of which are already chosen.The next n lines contains integer v (1  v  2^k - 1) and string s — the index of the node and the color of the node (s is one of the white, yellow, green, blue, red and orange).It is guaranteed that each node v appears in the input at most once.",
    "output_details": "Print one integer — the number of the different colorings modulo 10^9+7.",
    "sample_input": "3\n2\n5 orange\n2 white",
    "sample_output": "1024",
    "tags": ["brute force", "dp", "implementation", "math", "trees", "*2300"]
  },
  {
    "name": " Rubik's Cube Coloring (easy version)",
    "question_id": "rubiks-cube-coloring-easy-version",
    "question": "It is the easy version of the problem. The difference is that in this version, there are no nodes with already chosen colors.Theofanis is starving, and he wants to eat his favorite food, sheftalia. However, he should first finish his homework. Can you help him with this problem?You have a perfect binary tree of 2^k - 1 nodes — a binary tree where all vertices i from 1 to 2^{k - 1} - 1 have exactly two children: vertices 2i and 2i + 1. Vertices from 2^{k - 1} to 2^k - 1 don't have any children. You want to color its vertices with the 6 Rubik's cube colors (White, Green, Red, Blue, Orange and Yellow).Let's call a coloring good when all edges connect nodes with colors that are neighboring sides in the Rubik's cube.  A picture of Rubik's cube and its 2D map. More formally:   a white node can not be neighboring with white and yellow nodes;  a yellow node can not be neighboring with white and yellow nodes;  a green node can not be neighboring with green and blue nodes;  a blue node can not be neighboring with green and blue nodes;  a red node can not be neighboring with red and orange nodes;  an orange node can not be neighboring with red and orange nodes; You want to calculate the number of the good colorings of the binary tree. Two colorings are considered different if at least one node is colored with a different color.The answer may be too large, so output the answer modulo 10^9+7.",
    "input_details": "The first and only line contains the integers k (1  k  60) — the number of levels in the perfect binary tree you need to color.",
    "output_details": "Print one integer — the number of the different colorings modulo 10^9+7.",
    "sample_input": "3",
    "sample_output": "24576",
    "tags": ["combinatorics", "math", "*1300"]
  },
  {
    "name": "The Number of Imposters",
    "question_id": "the-number-of-imposters",
    "question": "Theofanis started playing the new online game called \"Among them\". However, he always plays with Cypriot players, and they all have the same name: \"Andreas\" (the most common name in Cyprus).In each game, Theofanis plays with n other players. Since they all have the same name, they are numbered from 1 to n.The players write m comments in the chat. A comment has the structure of \"i j c\" where i and j are two distinct integers and c is a string (1  i, j  n; i  j; c is either imposter or crewmate). The comment means that player i said that player j has the role c.An imposter always lies, and a crewmate always tells the truth. Help Theofanis find the maximum possible number of imposters among all the other Cypriot players, or determine that the comments contradict each other (see the notes for further explanation).Note that each player has exactly one role: either imposter or crewmate.",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of test cases. Description of each test case follows.The first line of each test case contains two integers n and m (1  n  2 dot 10^5; 0  m  5 dot 10^5) — the number of players except Theofanis and the number of comments.Each of the next m lines contains a comment made by the players of the structure \"i j c\" where i and j are two distinct integers and c is a string (1  i, j  n; i  j; c is either imposter or crewmate).There can be multiple comments for the same pair of (i, j).It is guaranteed that the sum of all n does not exceed 2 dot 10^5 and the sum of all m does not exceed 5 dot 10^5.",
    "output_details": "For each test case, print one integer — the maximum possible number of imposters. If the comments contradict each other, print -1.",
    "sample_input": "5\n3 2\n1 2 imposter\n2 3 crewmate\n5 4\n1 3 crewmate\n2 5 crewmate\n2 4 imposter\n3 4 imposter\n2 2\n1 2 imposter\n2 1 crewmate\n3 5\n1 2 imposter\n1 2 imposter\n3 2 crewmate\n3 2 crewmate\n1 3 imposter\n5 0",
    "sample_output": "2\n4\n-1\n2\n5",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "*1700"
    ]
  },
  {
    "name": "Make Them Equal",
    "question_id": "make-them-equal",
    "question": "Theofanis has a string s_1 s_2 \\dots s_n and a character c. He wants to make all characters of the string equal to c using the minimum number of operations.In one operation he can choose a number x (1  x  n) and for every position i, where i is not divisible by x, replace s_i with c. Find the minimum number of operations required to make all the characters equal to c and the x-s that he should use in his operations.",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of test cases.The first line of each test case contains the integer n (3  n  3 dot 10^5) and a lowercase Latin letter c — the length of the string s and the character the resulting string should consist of.The second line of each test case contains a string s of lowercase Latin letters — the initial string.It is guaranteed that the sum of n over all test cases does not exceed 3 dot 10^5.",
    "output_details": "For each test case, firstly print one integer m — the minimum number of operations required to make all the characters equal to c.Next, print m integers x_1, x_2, \\dots, x_m (1  x_j  n) — the x-s that should be used in the order they are given.It can be proved that under given constraints, an answer always exists. If there are multiple answers, print any.",
    "sample_input": "3\n4 a\naaaa\n4 a\nbaaa\n4 b\nbzyx",
    "sample_output": "0\n1\n2\n2 \n2 3",
    "tags": ["brute force", "greedy", "math", "strings", "*1200"]
  },
  {
    "name": "Special Numbers",
    "question_id": "special-numbers",
    "question": "Theofanis really likes sequences of positive integers, thus his teacher (Yeltsa Kcir) gave him a problem about a sequence that consists of only special numbers.Let's call a positive number special if it can be written as a sum of different non-negative powers of n. For example, for n = 4 number 17 is special, because it can be written as 4^0 + 4^2 = 1 + 16 = 17, but 9 is not.Theofanis asks you to help him find the k-th special number if they are sorted in increasing order. Since this number may be too large, output it modulo 10^9+7.",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of test cases.The first and only line of each test case contains two integers n and k (2  n  10^9; 1  k  10^9).",
    "output_details": "For each test case, print one integer — the k-th special number in increasing order modulo 10^9+7.",
    "sample_input": "3\n3 4\n2 12\n105 564",
    "sample_output": "9\n12\n3595374",
    "tags": ["bitmasks", "math", "*1100"]
  },
  {
    "name": "Consecutive Sum Riddle",
    "question_id": "consecutive-sum-riddle",
    "question": "Theofanis has a riddle for you and if you manage to solve it, he will give you a Cypriot snack halloumi for free (Cypriot cheese).You are given an integer n. You need to find two integers l and r such that -10^{18}  l < r  10^{18} and l + (l + 1) + ....... + (r - 1) + r = n.",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of test cases.The first and only line of each test case contains a single integer n (1  n  10^{18}).",
    "output_details": "For each test case, print the two integers l and r such that -10^{18}  l < r  10^{18} and l + (l + 1) + ....... + (r - 1) + r = n. It can be proven that an answer always exists. If there are multiple answers, print any.",
    "sample_input": "7\n1\n2\n3\n6\n100\n25\n3000000000000",
    "sample_output": "0 1\n-1 2 \n1 2 \n1 3 \n18 22\n-2 7\n999999999999 1000000000001",
    "tags": ["math", "*800"]
  },
  {
    "name": "Changing Brackets",
    "question_id": "changing-brackets",
    "question": "A sequence of round and square brackets is given. You can change the sequence by performing the following operations:  change the direction of a bracket from opening to closing and vice versa without changing the form of the bracket: i.e. you can change '(' to ')' and ')' to '('; you can change '[' to ']' and ']' to '['. The operation costs 0 burles. change any square bracket to round bracket having the same direction: i.e. you can change '[' to '(' but not from '(' to '['; similarly, you can change ']' to ')' but not from ')' to ']'. The operation costs 1 burle. The operations can be performed in any order any number of times.You are given a string s of the length n and q queries of the type \"l r\" where 1  l < r  n. For every substring s[l \\dots r], find the minimum cost to pay to make it a correct bracket sequence. It is guaranteed that the substring s[l \\dots r] has an even length.The queries must be processed independently, i.e. the changes made in the string for the answer to a question i don't affect the queries j (j > i). In other words, for every query, the substring s[l \\dots r] is given from the initially given string s.A correct bracket sequence is a sequence that can be built according the following rules:  an empty sequence is a correct bracket sequence;  if \"s\" is a correct bracket sequence, the sequences \"(s)\" and \"[s]\" are correct bracket sequences.  if \"s\" and \"t\" are correct bracket sequences, the sequence \"st\" (the concatenation of the sequences) is a correct bracket sequence. E.g. the sequences \"\", \"(()[])\", \"[()()]()\" and \"(())()\" are correct bracket sequences whereas \"(\", \"[(])\" and \")))\" are not.",
    "input_details": "The first line contains one integer t (1  t  100) — the number of test cases. Then t test cases follow.For each test case, the first line contains a non-empty string s containing only round ('(', ')') and square ('[', ']') brackets. The length of the string doesn't exceed 10^6. The string contains at least 2 characters.The second line contains one integer q (1  q  2 dot 10^5) — the number of queries.Then q lines follow, each of them contains two integers l and r (1  l < r  n where n is the length of s). It is guaranteed that the substring s[l \\dots r] has even length.It is guaranteed that the sum of the lengths of all strings given in all test cases doesn't exceed 10^6. The sum of all q given in all test cases doesn't exceed 2 dot 10^5.",
    "output_details": "For each test case output in a separate line for each query one integer x (x \\ge 0) — the minimum cost to pay to make the given substring a correct bracket sequence.",
    "sample_input": "3\n([))[)()][]]\n3\n1 12\n4 9\n3 6\n))))))\n2\n2 3\n1 4\n[]\n1\n1 2",
    "sample_output": "0\n2\n1\n0\n0\n0",
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "*2200"
    ]
  },
  {
    "name": "Red-Black Number",
    "question_id": "red-black-number",
    "question": "It is given a non-negative integer x, the decimal representation of which contains n digits. You need to color each its digit in red or black, so that the number formed by the red digits is divisible by A, and the number formed by the black digits is divisible by B.At least one digit must be colored in each of two colors. Consider, the count of digits colored in red is r and the count of digits colored in black is b. Among all possible colorings of the given number x, you need to output any such that the value of |r - b| is the minimum possible.Note that the number x and the numbers formed by digits of each color, may contain leading zeros.  Example of painting a number for A = 3 and B = 13 The figure above shows an example of painting the number x = 02165 of n = 5 digits for A = 3 and B = 13. The red digits form the number 015, which is divisible by 3, and the black ones — 26, which is divisible by 13. Note that the absolute value of the difference between the counts of red and black digits is 1, it is impossible to achieve a smaller value.",
    "input_details": "The first line contains one integer t (1  t  10) — the number of test cases. Then t test cases follow.Each test case consists of two lines. The first line contains three integers n, A, B (2  n  40, 1  A, B  40). The second line contains a non-negative integer x containing exactly n digits and probably containing leading zeroes.",
    "output_details": "For each test case, output in a separate line:  -1 if the desired coloring does not exist;  a string s of n characters, each of them is a letter 'R' or 'B'. If the i-th digit of the number x is colored in red, then the i-th character of the string s must be the letter 'R', otherwise the letter 'B'. The number formed by digits colored red should divisible by A. The number formed by digits colored black should divisible by B. The value |r-b| should be minimal, where r is the count of red digits, b is the count of black digits. If there are many possible answers, print any of them.",
    "sample_input": "4\n5 3 13\n02165\n4 2 1\n1357\n8 1 1\n12345678\n2 7 9\n90",
    "sample_output": "RBRBR\n-1\nBBRRRRBB\nBR",
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "meet-in-the-middle",
      "*2100"
    ]
  },
  {
    "name": "Gardener and Tree",
    "question_id": "gardener-and-tree",
    "question": "A tree is an undirected connected graph in which there are no cycles. This problem is about non-rooted trees. A leaf of a tree is a vertex that is connected to at most one vertex.The gardener Vitaly grew a tree from n vertices. He decided to trim the tree. To do this, he performs a number of operations. In one operation, he removes all leaves of the tree.  Example of a tree. For example, consider the tree shown in the figure above. The figure below shows the result of applying exactly one operation to the tree.  The result of applying the operation \"remove all leaves\" to the tree. Note the special cases of the operation:  applying an operation to an empty tree (of 0 vertices) does not change it;  applying an operation to a tree of one vertex removes this vertex (this vertex is treated as a leaf);  applying an operation to a tree of two vertices removes both vertices (both vertices are treated as leaves). Vitaly applied k operations sequentially to the tree. How many vertices remain?",
    "input_details": "The first line contains one integer t (1  t  10^4) — the number of test cases. Then t test cases follow.Each test case is preceded by an empty line.Each test case consists of several lines. The first line of the test case contains two integers n and k (1  n  4 dot 10^5, 1  k  2 dot 10^5) — the number of vertices in the tree and the number of operations, respectively. Then n - 1 lines follow, each of them contains two integers u and v (1  u, v  n, u  v) which describe a pair of vertices connected by an edge. It is guaranteed that the given graph is a tree and has no loops or multiple edges.It is guaranteed that the sum of n from all test cases does not exceed 4 dot 10^5.",
    "output_details": "For each test case output on a separate line a single integer — the number of vertices that remain in the tree after applying k operations.",
    "sample_input": "6\n\n14 1\n1 2\n2 3\n2 4\n4 5\n4 6\n2 7\n7 8\n8 9\n8 10\n3 11\n3 12\n1 13\n13 14\n\n2 200000\n1 2\n\n3 2\n1 2\n2 3\n\n5 1\n5 1\n3 2\n2 1\n5 4\n\n6 2\n5 1\n2 5\n5 6\n4 2\n3 4\n\n7 1\n4 3\n5 1\n1 3\n6 1\n1 7\n2 1",
    "sample_output": "7\n0\n0\n3\n1\n2",
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees",
      "*1600"
    ]
  },
  {
    "name": " Half of Same",
    "question_id": "half-of-same",
    "question": "This problem is a complicated version of D1, but it has significant differences, so read the whole statement.Polycarp has an array of n (n is even) integers a_1, a_2, \\dots, a_n. Polycarp conceived of a positive integer k. After that, Polycarp began performing the following operations on the array: take an index i (1  i  n) and reduce the number a_i by k.After Polycarp performed some (possibly zero) number of such operations, it turned out that at least half of the numbers in the array became the same. Find the maximum k at which such a situation is possible, or print -1 if such a number can be arbitrarily large.",
    "input_details": "The first line contains one integer t (1  t  10) — the number of test cases. Then t test cases follow.Each test case consists of two lines. The first line contains an even integer n (4  n  40) (n is even). The second line contains n integers a_1, a_2, \\dots a_n (-10^6  a_i  10^6).It is guaranteed that the sum of all n specified in the given test cases does not exceed 100.",
    "output_details": "For each test case output on a separate line an integer k (k \\ge 1) — the maximum possible number that Polycarp used in operations on the array, or -1, if such a number can be arbitrarily large.",
    "sample_input": "4\n6\n48 13 22 -15 16 35\n8\n-1 0 1 -1 0 1 -1 0\n4\n100 -1000 -1000 -1000\n4\n1 1 1 1",
    "sample_output": "13\n2\n-1\n-1",
    "tags": ["brute force", "math", "number theory", "*1900"]
  },
  {
    "name": " All are Same",
    "question_id": "all-are-same",
    "question": "This problem is a simplified version of D2, but it has significant differences, so read the whole statement.Polycarp has an array of n (n is even) integers a_1, a_2, \\dots, a_n. Polycarp conceived of a positive integer k. After that, Polycarp began performing the following operations on the array: take an index i (1  i  n) and reduce the number a_i by k.After Polycarp performed some (possibly zero) number of such operations, it turned out that all numbers in the array became the same. Find the maximum k at which such a situation is possible, or print -1 if such a number can be arbitrarily large.",
    "input_details": "The first line contains one integer t (1  t  10) — the number of test cases. Then t test cases follow.Each test case consists of two lines. The first line contains an even integer n (4  n  40) (n is even). The second line contains n integers a_1, a_2, \\dots a_n (-10^6  a_i  10^6).It is guaranteed that the sum of all n specified in the given test cases does not exceed 100.",
    "output_details": "For each test case output on a separate line an integer k (k \\ge 1) — the maximum possible number that Polycarp used in operations on the array, or -1, if such a number can be arbitrarily large.",
    "sample_input": "3\n6\n1 5 3 1 1 5\n8\n-1 0 1 -1 0 1 -1 0\n4\n100 -1000 -1000 -1000",
    "sample_output": "2\n1\n1100",
    "tags": ["math", "number theory", "*1100"]
  },
  {
    "name": "Save More Mice",
    "question_id": "save-more-mice",
    "question": "There are one cat, k mice, and one hole on a coordinate line. The cat is located at the point 0, the hole is located at the point n. All mice are located between the cat and the hole: the i-th mouse is located at the point x_i (0 < x_i < n). At each point, many mice can be located.In one second, the following happens. First, exactly one mouse moves to the right by 1. If the mouse reaches the hole, it hides (i.e. the mouse will not any more move to any point and will not be eaten by the cat). Then (after that the mouse has finished its move) the cat moves to the right by 1. If at the new cat's position, some mice are located, the cat eats them (they will not be able to move after that). The actions are performed until any mouse hasn't been hidden or isn't eaten.In other words, the first move is made by a mouse. If the mouse has reached the hole, it's saved. Then the cat makes a move. The cat eats the mice located at the pointed the cat has reached (if the cat has reached the hole, it eats nobody).Each second, you can select a mouse that will make a move. What is the maximum number of mice that can reach the hole without being eaten?",
    "input_details": "The first line contains one integer t (1  t  10^4) — the number of test cases. Then t test cases follow.Each test case consists of two lines. The first line contains two integers n and k (2  n  10^9, 1  k  4 dot 10^5). The second line contains k integers x_1, x_2, \\dots x_k (1  x_i < n) — the initial coordinates of the mice.It is guaranteed that the sum of all k given in the input doesn't exceed 4 dot 10^5.",
    "output_details": "For each test case output on a separate line an integer m (m \\ge 0) — the maximum number of mice that can reach the hole without being eaten.",
    "sample_input": "3\n10 6\n8 7 5 4 9 4\n2 8\n1 1 1 1 1 1 1 1\n12 11\n1 2 3 4 5 6 7 8 9 10 11",
    "sample_output": "3\n1\n4",
    "tags": ["binary search", "greedy", "greedy", "*1000"]
  },
  {
    "name": "Make it Divisible by 25",
    "question_id": "make-it-divisible-by-25",
    "question": "It is given a positive integer n. In 1 move, one can select any single digit and remove it (i.e. one selects some position in the number and removes the digit located at this position). The operation cannot be performed if only one digit remains. If the resulting number contains leading zeroes, they are automatically removed.E.g. if one removes from the number 32925 the 3-rd digit, the resulting number will be 3225. If one removes from the number 20099050 the first digit, the resulting number will be 99050 (the 2 zeroes going next to the first digit are automatically removed).What is the minimum number of steps to get a number such that it is divisible by 25 and positive? It is guaranteed that, for each n occurring in the input, the answer exists. It is guaranteed that the number n has no leading zeros.",
    "input_details": "The first line contains one integer t (1  t  10^4) — the number of test cases. Then t test cases follow.Each test case consists of one line containing one integer n (25  n  10^{18}). It is guaranteed that, for each n occurring in the input, the answer exists. It is guaranteed that the number n has no leading zeros.",
    "output_details": "For each test case output on a separate line an integer k (k \\ge 0) — the minimum number of steps to get a number such that it is divisible by 25 and positive.",
    "sample_input": "5\n100\n71345\n3259\n50555\n2050047",
    "sample_output": "0\n3\n1\n3\n2",
    "tags": ["dfs and similar", "dp", "greedy", "math", "math", "*900"]
  },
  {
    "name": "Elections",
    "question_id": "elections",
    "question": "The elections in which three candidates participated have recently ended. The first candidate received a votes, the second one received b votes, the third one received c votes. For each candidate, solve the following problem: how many votes should be added to this candidate so that he wins the election (i.e. the number of votes for this candidate was strictly greater than the number of votes for any other candidate)?Please note that for each candidate it is necessary to solve this problem independently, i.e. the added votes for any candidate do not affect the calculations when getting the answer for the other two candidates.",
    "input_details": "The first line contains one integer t (1  t  10^4) — the number of test cases. Then t test cases follow.Each test case consists of one line containing three integers a, b, and c (0  a,b,c  10^9).",
    "output_details": "For each test case, output in a separate line three integers A, B, and C (A, B, C \\ge 0) separated by spaces — the answers to the problem for the first, second, and third candidate, respectively.",
    "sample_input": "5\n0 0 0\n10 75 15\n13 13 17\n1000 0 0\n0 1000000000 0",
    "sample_output": "1 1 1\n66 0 61\n5 5 0\n0 1001 1001\n1000000001 0 1000000001",
    "tags": ["math", "*800"]
  },
  {
    "name": " Alice and Recoloring 2",
    "question_id": "alice-and-recoloring-2",
    "question": "The difference between the versions is in the costs of operations. Solution for one version won't work for another!Alice has a grid of size n \\times m, initially all its cells are colored white. The cell on the intersection of i-th row and j-th column is denoted as (i, j). Alice can do the following operations with this grid:Choose any subrectangle containing cell (1, 1), and flip the colors of all its cells. (Flipping means changing its color from white to black or from black to white). This operation costs 1 coin.Choose any subrectangle containing cell (n, 1), and flip the colors of all its cells. This operation costs 3 coins.Choose any subrectangle containing cell (1, m), and flip the colors of all its cells. This operation costs 4 coins.Choose any subrectangle containing cell (n, m), and flip the colors of all its cells. This operation costs 2 coins. As a reminder, subrectangle is a set of all cells (x, y) with x_1  x  x_2, y_1  y  y_2 for some 1  x_1  x_2  n, 1  y_1  y_2  m.Alice wants to obtain her favorite coloring with these operations. What's the smallest number of coins that she would have to spend? It can be shown that it's always possible to transform the initial grid into any other.",
    "input_details": "The first line of the input contains 2 integers n, m (1  n, m  500) — the dimensions of the grid.The i-th of the next n lines contains a string s_i of length m, consisting of letters W and B. The j-th character of string s_i is W if the cell (i, j) is colored white in the favorite coloring of Alice, and B if it's colored black.",
    "output_details": "Output the smallest number of coins Alice would have to spend to achieve her favorite coloring.",
    "sample_input": "3 3\nWWW\nWBB\nWBB",
    "sample_output": "2",
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy",
      "*2800"
    ]
  },
  {
    "name": " Alice and Recoloring 1",
    "question_id": "alice-and-recoloring-1",
    "question": "The difference between the versions is in the costs of operations. Solution for one version won't work for another!Alice has a grid of size n \\times m, initially all its cells are colored white. The cell on the intersection of i-th row and j-th column is denoted as (i, j). Alice can do the following operations with this grid:Choose any subrectangle containing cell (1, 1), and flip the colors of all its cells. (Flipping means changing its color from white to black or from black to white). This operation costs 1 coin.Choose any subrectangle containing cell (n, 1), and flip the colors of all its cells. This operation costs 2 coins.Choose any subrectangle containing cell (1, m), and flip the colors of all its cells. This operation costs 4 coins.Choose any subrectangle containing cell (n, m), and flip the colors of all its cells. This operation costs 3 coins. As a reminder, subrectangle is a set of all cells (x, y) with x_1  x  x_2, y_1  y  y_2 for some 1  x_1  x_2  n, 1  y_1  y_2  m.Alice wants to obtain her favorite coloring with these operations. What's the smallest number of coins that she would have to spend? It can be shown that it's always possible to transform the initial grid into any other.",
    "input_details": "The first line of the input contains 2 integers n, m (1  n, m  500) — the dimensions of the grid.The i-th of the next n lines contains a string s_i of length m, consisting of letters W and B. The j-th character of string s_i is W if the cell (i, j) is colored white in the favorite coloring of Alice, and B if it's colored black.",
    "output_details": "Output the smallest number of coins Alice would have to spend to achieve her favorite coloring.",
    "sample_input": "3 3\nWWW\nWBB\nWBB",
    "sample_output": "3",
    "tags": ["constructive algorithms", "greedy", "*2600"]
  },
  {
    "name": "Bored Bakry",
    "question_id": "bored-bakry",
    "question": "Bakry got bored of solving problems related to xor, so he asked you to solve this problem for him.You are given an array a of n integers [a_1, a_2, ......., a_n].Let's call a subarray a_{l}, a_{l+1}, a_{l+2}, ......., a_r good if a_l \\, \\& \\, a_{l+1} \\, \\& \\, a_{l+2} \\, ....... \\, \\& \\, a_r > a_l \\oplus a_{l+1} \\oplus a_{l+2} ....... \\oplus a_r, where \\oplus denotes the bitwise XOR operation and \\& denotes the bitwise AND operation.Find the length of the longest good subarray of a, or determine that no such subarray exists.",
    "input_details": "The first line contains a single integer n (1  n  10^6) — the length of the array.The second line contains n integers a_1, a_2, ......., a_n (1  a_i  10^6) — elements of the array.",
    "output_details": "Print a single integer — the length of the longest good subarray. If there are no good subarrays, print 0.",
    "sample_input": "2\n5 6",
    "sample_output": "2",
    "tags": ["bitmasks", "greedy", "math", "two pointers", "*2400"]
  },
  {
    "name": "Hemose in ICPC ?",
    "question_id": "hemose-in-icpc",
    "question": "This is an interactive problem!In the last regional contest Hemose, ZeyadKhattab and YahiaSherif — members of the team Carpe Diem — did not qualify to ICPC because of some unknown reasons. Hemose was very sad and had a bad day after the contest, but ZeyadKhattab is very wise and knows Hemose very well, and does not want to see him sad.Zeyad knows that Hemose loves tree problems, so he gave him a tree problem with a very special device.Hemose has a weighted tree with n nodes and n-1 edges. Unfortunately, Hemose doesn't remember the weights of edges.Let's define Dist(u, v) for u v as the greatest common divisor of the weights of all edges on the path from node u to node v.Hemose has a special device. Hemose can give the device a set of nodes, and the device will return the largest Dist between any two nodes from the set. More formally, if Hemose gives the device a set S of nodes, the device will return the largest value of Dist(u, v) over all pairs (u, v) with u, v \\in S and u  v.Hemose can use this Device at most 12 times, and wants to find any two distinct nodes a, b, such that Dist(a, b) is maximum possible. Can you help him?",
    "input_details": "actionBegin the interaction from reading a single integer n (2  n  10^3) — the number of nodes in the tree.Next, read n-1 lines. The i-th of the next n-1 lines contains two integers u_i and v_i (1  u_i, v_i  n, u_i v_i), which means that there's an edge between nodes u_i and v_i.It's guaranteed that weights of edges were  10^9.It is guaranteed that the given graph is a tree.Now you may begin asking queries. To ask a query about a set of k nodes v_1, v_2, ......., v_k (2  k  n, 1  v_i  n, all v_i are distinct), output: ? k v_1 v_2 ....... v_kYou will then receive an integer x, the largest Dist(v_i, v_j) over 1  i, j  k with i  j.When you have found a and b (1  a, b  n), a b) such that Dist(a, b) is the maximum possible, print the answer in the following format: ! a b Outputting answer doesn't count towards the limit of 12 queries.If there are several pairs (a, b) with the same largest Dist(a, b), you can output any.After printing a query do not forget to output the end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush(stdout) or cout.flush() in C++; System.out.flush() in Java; flush(output) in Pascal; stdout.flush() in Python; see the documentation for other languages.HacksTo hack a solution, use the following format.The first line should contain a single integer n (2  n  10^3) — the number of nodes.The i-th of the next n-1 lines should contain three integers u_i, v_i, w_i (1  u_i, v_i  n, u_i\\ne v_i, 1  w  10^9), which means that there's an edge between nodes u_i and v_i with weight w_i.These n-1 edges must form a tree.",
    "output_details": "eInput6\n1 2\n2 3\n2 4\n1 5\n5 6\n\n10\n\n2\n\n10Output? 6 1 2 3 4 5 6\n\n? 3 3 1 5\n\n? 2 1 2\n\n! 1 2",
    "sample_input": "t? 6 1 2 3 4 5 6\n\n? 3 3 1 5\n\n? 2 1 2\n\n! 1 2",
    "sample_output": "e tree in the first sample:",
    "tags": [
      "binary search",
      "dfs and similar",
      "implementation",
      "interactive",
      "math",
      "number theory",
      "trees",
      "*2300"
    ]
  },
  {
    "name": "Bakry and Partitioning",
    "question_id": "bakry-and-partitioning",
    "question": "Bakry faced a problem, but since he's lazy to solve it, he asks for your help.You are given a tree of n nodes, the i-th node has value a_i assigned to it for each i from 1 to n. As a reminder, a tree on n nodes is a connected graph with n-1 edges.You want to delete at least 1, but at most k-1 edges from the tree, so that the following condition would hold:For every connected component calculate the bitwise XOR of the values of the nodes in it. Then, these values have to be the same for all connected components.Is it possible to achieve this condition?",
    "input_details": "Each test contains multiple test cases. The first line contains the number of test cases t (1  t  5 dot 10^4). Description of the test cases follows.The first line of each test case contains two integers n and k (2  k  n  10^5).The second line of each test case contains n integers a_1, a_2, ..., a_n (1  a_i  10^9).The i-th of the next n-1 lines contains two integers u_i and v_i (1  u_i, v_i  n, u_i v_i), which means that there's an edge between nodes u_i and v_i.It is guaranteed that the given graph is a tree.It is guaranteed that the sum of n over all test cases doesn't exceed 2 dot 10^5.",
    "output_details": "For each test case, you should output a single string. If you can delete the edges according to the conditions written above, output \"YES\" (without quotes). Otherwise, output \"NO\" (without quotes).You can print each letter of \"YES\" and \"NO\" in any case (upper or lower).",
    "sample_input": "5\n2 2\n1 3\n1 2\n5 5\n3 3 3 3 3\n1 2\n2 3\n1 4\n4 5\n5 2\n1 7 2 3 5\n1 2\n2 3\n1 4\n4 5\n5 3\n1 6 4 1 2\n1 2\n2 3\n1 4\n4 5\n3 3\n1 7 4\n1 2\n2 3",
    "sample_output": "NO\nYES\nNO\nYES\nNO",
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "trees",
      "*1700"
    ]
  },
  {
    "name": "Hemose Shopping",
    "question_id": "hemose-shopping",
    "question": "Hemose was shopping with his friends Samez, AhmedZ, AshrafEzz, TheSawan and O_E in Germany. As you know, Hemose and his friends are problem solvers, so they are very clever. Therefore, they will go to all discount markets in Germany.Hemose has an array of n integers. He wants Samez to sort the array in the non-decreasing order. Since it would be a too easy problem for Samez, Hemose allows Samez to use only the following operation:Choose indices i and j such that 1  i, j  n, and \\lvert i - j \\rvert  x. Then, swap elements a_i and a_j.Can you tell Samez if there's a way to sort the array in the non-decreasing order by using the operation written above some finite number of times (possibly 0)?",
    "input_details": "Each test contains multiple test cases. The first line contains the number of test cases t (1  t  10^5). Description of the test cases follows.The first line of each test case contains two integers n and x (1  x  n  10^5).The second line of each test case contains n integers a_1, a_2, ..., a_n (1  a_i  10^9).It is guaranteed that the sum of n over all test cases doesn't exceed 2 dot 10^5.",
    "output_details": "For each test case, you should output a single string. If Samez can sort the array in non-decreasing order using the operation written above, output \"YES\" (without quotes). Otherwise, output \"NO\" (without quotes).You can print each letter of \"YES\" and \"NO\" in any case (upper or lower).",
    "sample_input": "4\n3 3\n3 2 1\n4 3\n1 2 3 4\n5 2\n5 1 2 3 4\n5 4\n1 2 3 4 4",
    "sample_output": "NO\nYES\nYES\nYES",
    "tags": ["constructive algorithms", "dsu", "math", "sortings", "*1200"]
  },
  {
    "name": "Gamer Hemose",
    "question_id": "gamer-hemose",
    "question": "One day, Ahmed_Hossam went to Hemose and said \"Let's solve a gym contest!\". Hemose didn't want to do that, as he was playing Valorant, so he came up with a problem and told it to Ahmed to distract him. Sadly, Ahmed can't solve it... Could you help him?There is an Agent in Valorant, and he has n weapons. The i-th weapon has a damage value a_i, and the Agent will face an enemy whose health value is H.The Agent will perform one or more moves until the enemy dies.In one move, he will choose a weapon and decrease the enemy's health by its damage value. The enemy will die when his health will become less than or equal to 0. However, not everything is so easy: the Agent can't choose the same weapon for 2 times in a row.What is the minimum number of times that the Agent will need to use the weapons to kill the enemy?",
    "input_details": "Each test contains multiple test cases. The first line contains the number of test cases t (1  t  10^5). Description of the test cases follows.The first line of each test case contains two integers n and H (2  n  10^3, 1  H  10^9) — the number of available weapons and the initial health value of the enemy.The second line of each test case contains n integers a_1, a_2, ......., a_n (1  a_i  10^9) — the damage values of the weapons.It's guaranteed that the sum of n over all test cases doesn't exceed 2 dot 10^5.",
    "output_details": "For each test case, print a single integer — the minimum number of times that the Agent will have to use the weapons to kill the enemy.",
    "sample_input": "3\n2 4\n3 7\n2 6\n4 2\n3 11\n2 1 7",
    "sample_output": "1\n2\n3",
    "tags": ["binary search", "greedy", "math", "sortings", "*800"]
  },
  {
    "name": "Omkar and Mosaic",
    "question_id": "omkar-and-mosaic",
    "question": "Omkar is creating a mosaic using colored square tiles, which he places in an n \\times n grid. When the mosaic is complete, each cell in the grid will have either a glaucous or sinoper tile. However, currently he has only placed tiles in some cells. A completed mosaic will be a mastapeece if and only if each tile is adjacent to exactly 2 tiles of the same color (2 tiles are adjacent if they share a side.) Omkar wants to fill the rest of the tiles so that the mosaic becomes a mastapeece. Now he is wondering, is the way to do this unique, and if it is, what is it?",
    "input_details": "The first line contains a single integer n (1  n  2000).Then follow n lines with n characters in each line. The i-th character in the j-th line corresponds to the cell in row i and column j of the grid, and will be S if Omkar has placed a sinoper tile in this cell, G if Omkar has placed a glaucous tile, . if it's empty. ",
    "output_details": "On the first line, print UNIQUE if there is a unique way to get a mastapeece, NONE if Omkar cannot create any, and MULTIPLE if there is more than one way to do so. All letters must be uppercase.If you print UNIQUE, then print n additional lines with n characters in each line, such that the i-th character in the j^{\\text{th}} line is S if the tile in row i and column j of the mastapeece is sinoper, and G if it is glaucous. ",
    "sample_input": "4\nS...\n..G.\n....\n...S",
    "sample_output": "MULTIPLE",
    "tags": ["combinatorics", "constructive algorithms", "math"]
  },
  {
    "name": "Omkar and Tours",
    "question_id": "omkar-and-tours",
    "question": "Omkar is hosting tours of his country, Omkarland! There are n cities in Omkarland, and, rather curiously, there are exactly n-1 bidirectional roads connecting the cities to each other. It is guaranteed that you can reach any city from any other city through the road network.Every city has an enjoyment value e. Each road has a capacity c, denoting the maximum number of vehicles that can be on it, and an associated toll t. However, the toll system in Omkarland has an interesting quirk: if a vehicle travels on multiple roads on a single journey, they pay only the highest toll of any single road on which they traveled. (In other words, they pay \\max t over all the roads on which they traveled.) If a vehicle traverses no roads, they pay 0 toll.Omkar has decided to host q tour groups. Each tour group consists of v vehicles starting at city x. (Keep in mind that a tour group with v vehicles can travel only on roads with capacity  v.) Being the tour organizer, Omkar wants his groups to have as much fun as they possibly can, but also must reimburse his groups for the tolls that they have to pay. Thus, for each tour group, Omkar wants to know two things: first, what is the enjoyment value of the city y with maximum enjoyment value that the tour group can reach from their starting city, and second, how much per vehicle will Omkar have to pay to reimburse the entire group for their trip from x to y? (This trip from x to y will always be on the shortest path from x to y.)In the case that there are multiple reachable cities with the maximum enjoyment value, Omkar will let his tour group choose which one they want to go to. Therefore, to prepare for all possible scenarios, he wants to know the amount of money per vehicle that he needs to guarantee that he can reimburse the group regardless of which city they choose.",
    "input_details": "The first line contains two integers n and q (2  n  2 dot 10^5, 1  q  2 dot 10^5), representing the number of cities and the number of groups, respectively.The next line contains n integers e_1, e_2, ......., e_n (1  e_i  10^9), where e_i represents the enjoyment value for city i.The next n-1 lines each contain four integers a, b, c, and t (1  a,b  n, 1  c  10^9, 1  t  10^9), representing an road between city a and city b with capacity c and toll t.The next q lines each contain two integers v and x (1  v  10^9, 1  x  n), representing the number of vehicles in the tour group and the starting city, respectively.",
    "output_details": "Output q lines. The i-th line should contain two integers: the highest possible enjoyment value of a city reachable by the i-th tour group, and the amount of money per vehicle Omkar needs to guarantee that he can reimburse the i-th tour group.",
    "sample_input": "5 3\n2 2 3 3 3\n1 2 4 7\n1 3 2 8\n2 4 8 2\n2 5 1 1\n1 3\n9 5\n6 2",
    "sample_output": "3 8\n3 0\n3 2",
    "tags": ["data structures", "divide and conquer", "sortings", "trees"]
  },
  {
    "name": "Omkar and Time Travel",
    "question_id": "omkar-and-time-travel",
    "question": "El Psy Kongroo.Omkar is watching Steins;Gate.In Steins;Gate, Okabe Rintarou needs to complete n tasks (1  n  2 dot 10^5). Unfortunately, he doesn't know when he needs to complete the tasks.Initially, the time is 0. Time travel will now happen according to the following rules:For each k = 1, 2, ......., n, Okabe will realize at time b_k that he was supposed to complete the k-th task at time a_k (a_k < b_k). When he realizes this, if k-th task was already completed at time a_k, Okabe keeps the usual flow of time. Otherwise, he time travels to time a_k.If Okabe time travels to time a_k, all tasks after this time will become incomplete again. That is, for every i, if a_i>a_k, a_i will become incomplete, if it was complete (if it was incomplete, nothing will change).Okabe has bad memory, so he can time travel to time a_k only immediately after getting to time b_k and learning that he was supposed to complete the k-th task at time a_k. That is, even if Okabe already had to perform k-th task before, he wouldn't remember it before stumbling on the info about this task at time b_k again.Please refer to the notes for an example of time travelling.There is a certain set s of tasks such that the first moment that all of the tasks in s are simultaneously completed (regardless of whether any other tasks are currently completed), a funny scene will take place. Omkar loves this scene and wants to know how many times Okabe will time travel before this scene takes place. Find this number modulo 10^9 + 7. It can be proven that eventually all n tasks will be completed and so the answer always exists.",
    "input_details": "The first line contains an integer n (1  n  2 dot 10^5)  — the number of tasks that Okabe needs to complete.n lines follow. The k-th of these lines contain two integers a_k and b_k (1  a_k < b_k  2n)  — the time at which Okabe needs to complete the k-th task and the time that he realizes this respectively. All 2n of these times are distinct (so every time from 1 to 2n inclusive appears exactly once in the input).The next line contains a single integer t (1  t  n)  — the size of the set s of tasks that lead to the funny scene.The last line contains t integers s_1, s_2, ......., s_t  — (1  s_k  n, the numbers s_1, s_2, ......., s_t are distinct)  — the set s of tasks.",
    "output_details": "Output a single integer  — the number of times that Okabe time travels until all tasks in the set s are simultaneously completed, modulo 10^9 + 7.",
    "sample_input": "2\n1 4\n2 3\n2\n1 2",
    "sample_output": "3",
    "tags": ["data structures", "math"]
  },
  {
    "name": "Defender of Childhood Dreams",
    "question_id": "defender-of-childhood-dreams",
    "question": "Even if you just leave them be, they will fall to pieces all by themselves. So, someone has to protect them, right?You find yourself playing with Teucer again in the city of Liyue. As you take the eccentric little kid around, you notice something interesting about the structure of the city.Liyue can be represented as a directed graph containing n nodes. Nodes are labeled from 1 to n. There is a directed edge from node a to node b if and only if a < b.A path between nodes a and b is defined as a sequence of edges such that you can start at a, travel along all of these edges in the corresponding direction, and end at b. The length of a path is defined by the number of edges. A rainbow path of length x is defined as a path in the graph such that there exists at least 2 distinct colors among the set of x edges.Teucer's favorite number is k. You are curious about the following scenario: If you were to label each edge with a color, what is the minimum number of colors needed to ensure that all paths of length k or longer are rainbow paths?Teucer wants to surprise his older brother with a map of Liyue. He also wants to know a valid coloring of edges that uses the minimum number of colors. Please help him with this task!",
    "input_details": "The only line of input contains two integers n and k (2  k < n  1000). ",
    "output_details": "On the first line, output c, the minimum colors you need to satisfy the above requirements.On the second line, print a valid edge coloring as an array of \\frac{n(n-1)}{2} integers ranging from 1 to c. Exactly c distinct colors should exist in the construction. Print the edges in increasing order by the start node first, then by the second node.For example, if n=4, the edge colors will correspond to this order of edges: (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)",
    "sample_input": "5 3",
    "sample_output": "2\n1 2 2 2 2 2 2 1 1 1",
    "tags": ["bitmasks", "constructive algorithms", "divide and conquer"]
  },
  {
    "name": "Moment of Bloom",
    "question_id": "moment-of-bloom",
    "question": "She does her utmost to flawlessly carry out a person's last rites and preserve the world's balance of yin and yang.Hu Tao, being the little prankster she is, has tried to scare you with this graph problem! You are given a connected undirected graph of n nodes with m edges. You also have q queries. Each query consists of two nodes a and b.Initially, all edges in the graph have a weight of 0. For each query, you must choose a simple path starting from a and ending at b. Then you add 1 to every edge along this path. Determine if it's possible, after processing all q queries, for all edges in this graph to have an even weight. If so, output the choice of paths for each query. If it is not possible, determine the smallest number of extra queries you could add to make it possible. It can be shown that this number will not exceed 10^{18} under the given constraints.A simple path is defined as any path that does not visit a node more than once.An edge is said to have an even weight if its value is divisible by 2.",
    "input_details": "The first line contains two integers n and m (2  n  3 dot 10^5, n-1  m  \\min{ft(\\frac{n(n-1)}{2}, 3 dot 10^5\\right)}).Each of the next m lines contains two integers x and y (1  x, y  n, x y) indicating an undirected edge between node x and y. The input will not contain self-loops or duplicate edges, and the provided graph will be connected.The next line contains a single integer q (1  q  3 dot 10^5).Each of the next q lines contains two integers a and b (1  a, b  n, a  b), the description of each query.It is guaranteed that nq  3 dot 10^5.",
    "output_details": "If it is possible to force all edge weights to be even, print \"YES\" on the first line, followed by 2q lines indicating the choice of path for each query in the same order the queries are given. For each query, the first line should contain a single integer x: the number of nodes in the chosen path. The next line should then contain x spaced separated integers p_i indicating the path you take (p_1 = a, p_x = b and all numbers should fall between 1 and n). This path cannot contain duplicate nodes and must be a valid simple path in the graph.If it is impossible to force all edge weights to be even, print \"NO\" on the first line and the minimum number of added queries on the second line.",
    "sample_input": "6 7\n2 1\n2 3\n3 5\n1 4\n6 1\n5 6\n4 5\n3\n1 4\n5 1\n4 5",
    "sample_output": "YES\n2\n1 4\n4\n5 3 2 1\n5\n4 1 2 3 5",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "name": "Omkar and the Meaning of Life",
    "question_id": "omkar-and-the-meaning-of-life",
    "question": "It turns out that the meaning of life is a permutation p_1, p_2, ......., p_n of the integers 1, 2, ......., n (2  n  100). Omkar, having created all life, knows this permutation, and will allow you to figure it out using some queries.A query consists of an array a_1, a_2, ......., a_n of integers between 1 and n. a is not required to be a permutation. Omkar will first compute the pairwise sum of a and p, meaning that he will compute an array s where s_j = p_j + a_j for all j = 1, 2, ......., n. Then, he will find the smallest index k such that s_k occurs more than once in s, and answer with k. If there is no such index k, then he will answer with 0.You can perform at most 2n queries. Figure out the meaning of life p.",
    "input_details": "actionStart the interaction by reading single integer n (2  n  100)  — the length of the permutation p.You can then make queries. A query consists of a single line \"? \\enspace a_1 \\enspace a_2 \\enspace ....... \\enspace a_n\" (1  a_j  n).The answer to each query will be a single integer k as described above (0  k  n).After making a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush(stdout) or cout.flush() in C++; System.out.flush() in Java; flush(output) in Pascal; stdout.flush() in Python; see documentation for other languages.To output your answer, print a single line \"! \\enspace p_1 \\enspace p_2 \\enspace ....... \\enspace p_n\" then terminate.You can make at most 2n queries. Outputting the answer does not count as a query.Hack FormatTo hack, first output a line containing n (2  n  100), then output another line containing the hidden permutation p_1, p_2, ......., p_n of numbers from 1 to n.",
    "output_details": "eInput5\n\n2\n\n0\n\n1\nOutput\n? 4 4 2 3 2\n\n? 3 5 1 5 5\n\n? 5 2 4 3 1\n\n! 3 2 1 5 4\n",
    "sample_input": "t\n? 4 4 2 3 2\n\n? 3 5 1 5 5\n\n? 5 2 4 3 1\n\n! 3 2 1 5 4",
    "sample_output": "the sample, the hidden permutation p is [3, 2, 1, 5, 4]. Three queries were made.The first query is a = [4, 4, 2, 3, 2]. This yields s = [3 + 4, 2 + 4, 1 + 2, 5 + 3, 4 + 2] = [7, 6, 3, 8, 6]. 6 is the only number that appears more than once, and it appears first at index 2, making the answer to the query 2.The second query is a = [3, 5, 1, 5, 5]. This yields s = [3 + 3, 2 + 5, 1 + 1, 5 + 5, 4 + 5] = [6, 7, 2, 10, 9]. There are no numbers that appear more than once here, so the answer to the query is 0.The third query is a = [5, 2, 4, 3, 1]. This yields s = [3 + 5, 2 + 2, 1 + 4, 5 + 3, 4 + 1] = [8, 4, 5, 8, 5]. 5 and 8 both occur more than once here. 5 first appears at index 3, while 8 first appears at index 1, and 1 < 3, making the answer to the query 1.Note that the sample is only meant to provide an example of how the interaction works; it is not guaranteed that the above queries represent a correct strategy with which to determine the answer.",
    "tags": ["constructive algorithms", "greedy", "interactive"]
  },
  {
    "name": "Omkar and Determination",
    "question_id": "omkar-and-determination",
    "question": "The problem statement looms below, filling you with determination.Consider a grid in which some cells are empty and some cells are filled. Call a cell in this grid exitable if, starting at that cell, you can exit the grid by moving up and left through only empty cells. This includes the cell itself, so all filled in cells are not exitable. Note that you can exit the grid from any leftmost empty cell (cell in the first column) by going left, and from any topmost empty cell (cell in the first row) by going up.Let's call a grid determinable if, given only which cells are exitable, we can exactly determine which cells are filled in and which aren't.You are given a grid a of dimensions n \\times m , i. e. a grid with n rows and m columns. You need to answer q queries (1  q  2 dot 10^5). Each query gives two integers x_1, x_2 (1  x_1  x_2  m) and asks whether the subgrid of a consisting of the columns x_1, x_1 + 1, ......., x_2 - 1, x_2 is determinable.",
    "input_details": "The first line contains two integers n, m (1  n, m  10^6, nm  10^6)  — the dimensions of the grid a.n lines follow. The y-th line contains m characters, the x-th of which is 'X' if the cell on the intersection of the the y-th row and x-th column is filled and \".\" if it is empty.The next line contains a single integer q (1  q  2 dot 10^5)  — the number of queries.q lines follow. Each line contains two integers x_1 and x_2 (1  x_1  x_2  m), representing a query asking whether the subgrid of a containing the columns x_1, x_1 + 1, ......., x_2 - 1, x_2 is determinable.",
    "output_details": "For each query, output one line containing \"YES\" if the subgrid specified by the query is determinable and \"NO\" otherwise. The output is case insensitive (so \"yEs\" and \"No\" will also be accepted).",
    "sample_input": "4 5\n..XXX\n...X.\n...X.\n...X.\n5\n1 3\n3 3\n4 5\n5 5\n1 5",
    "sample_output": "YES\nYES\nNO\nYES\nNO",
    "tags": ["data structures", "dp"]
  },
  {
    "name": "Omkar and Heavenly Tree",
    "question_id": "omkar-and-heavenly-tree",
    "question": "Lord Omkar would like to have a tree with n nodes (3  n  10^5) and has asked his disciples to construct the tree. However, Lord Omkar has created m (\\mathbf{1  m < n}) restrictions to ensure that the tree will be as heavenly as possible. A tree with n nodes is an connected undirected graph with n nodes and n-1 edges. Note that for any two nodes, there is exactly one simple path between them, where a simple path is a path between two nodes that does not contain any node more than once.Here is an example of a tree:   A restriction consists of 3 pairwise distinct integers, a, b, and c (1  a,b,c  n). It signifies that node b cannot lie on the simple path between node a and node c. Can you help Lord Omkar and become his most trusted disciple? You will need to find heavenly trees for multiple sets of restrictions. It can be shown that a heavenly tree will always exist for any set of restrictions under the given constraints.",
    "input_details": "Each test contains multiple test cases. The first line contains the number of test cases t (1  t  10^4). Description of the test cases follows.The first line of each test case contains two integers, n and m (3  n  10^5, \\mathbf{1  m < n}), representing the size of the tree and the number of restrictions.The i-th of the next m lines contains three integers a_i, b_i, c_i (1  a_i, b_i, c_i  n, a, b, c are distinct), signifying that node b_i cannot lie on the simple path between nodes a_i and c_i. It is guaranteed that the sum of n across all test cases will not exceed 10^5.",
    "output_details": "For each test case, output n-1 lines representing the n-1 edges in the tree. On each line, output two integers u and v (1  u, v  n, u  v) signifying that there is an edge between nodes u and v. Given edges have to form a tree that satisfies Omkar's restrictions.",
    "sample_input": "2\n7 4\n1 2 3\n3 4 5\n5 6 7\n6 5 4\n5 3\n1 2 3\n2 3 4\n3 4 5",
    "sample_output": "1 2\n1 3\n3 5\n3 4\n2 7\n7 6\n5 1\n1 3\n3 2\n2 4",
    "tags": ["constructive algorithms", "trees"]
  },
  {
    "name": "Windblume Ode",
    "question_id": "windblume-ode",
    "question": "A bow adorned with nameless flowers that bears the earnest hopes of an equally nameless person.You have obtained the elegant bow known as the Windblume Ode. Inscribed in the weapon is an array of n (n \\ge 3) positive distinct integers (i.e. different, no duplicates are allowed).Find the largest subset (i.e. having the maximum number of elements) of this array such that its sum is a composite number. A positive integer x is called composite if there exists a positive integer y such that 1 < y < x and x is divisible by y.If there are multiple subsets with this largest size with the composite sum, you can output any of them. It can be proven that under the constraints of the problem such a non-empty subset always exists.",
    "input_details": "Each test consists of multiple test cases. The first line contains the number of test cases t (1  t  100). Description of the test cases follows.The first line of each test case contains an integer n (3  n  100) — the length of the array.The second line of each test case contains n distinct integers a_{1},a_{2},\\dots,a_{n} (1  a_{i}  200) — the elements of the array.",
    "output_details": "Each test case should have two lines of output.The first line should contain a single integer x: the size of the largest subset with composite sum. The next line should contain x space separated integers representing the indices of the subset of the initial array.",
    "sample_input": "4\n3\n8 1 2\n4\n6 9 4 2\n9\n1 2 3 4 5 6 7 8 9\n3\n200 199 198",
    "sample_output": "2\n2 1\n4\n2 1 4 3\n9\n6 9 1 2 3 4 5 7 8\n3\n1 2 3",
    "tags": ["math", "number theory"]
  },
  {
    "name": "Diameter of Graph",
    "question_id": "diameter-of-graph",
    "question": "CQXYM wants to create a connected undirected graph with n nodes and m edges, and the diameter of the graph must be strictly less than k-1. Also, CQXYM doesn't want a graph that contains self-loops or multiple edges (i.e. each edge connects two different vertices and between each pair of vertices there is at most one edge).The diameter of a graph is the maximum distance between any two nodes.The distance between two nodes is the minimum number of the edges on the path which endpoints are the two nodes.CQXYM wonders whether it is possible to create such a graph.",
    "input_details": "The input consists of multiple test cases. The first line contains an integer t (1  t  10^5) — the number of test cases. The description of the test cases follows.Only one line of each test case contains three integers n(1  n  10^9), m, k (0  m,k  10^9).",
    "output_details": "For each test case, print YES if it is possible to create the graph, or print NO if it is impossible. You can print each letter in any case (upper or lower).",
    "sample_input": "5\n1 0 3\n4 5 3\n4 6 3\n5 4 1\n2 1 1",
    "sample_output": "YES\nNO\nYES\nNO\nNO",
    "tags": ["constructive algorithms", "graphs", "greedy", "math", "*1200"]
  },
  {
    "name": "CQXYM Count Permutations",
    "question_id": "cqxym-count-permutations",
    "question": "CQXYM is counting permutations length of 2n.A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).A permutation p(length of 2n) will be counted only if the number of i satisfying p_i<p_{i+1} is no less than n. For example:  Permutation [1, 2, 3, 4] will count, because the number of such i that p_i<p_{i+1} equals 3 (i = 1, i = 2, i = 3). Permutation [3, 2, 1, 4] won't count, because the number of such i that p_i<p_{i+1} equals 1 (i = 3). CQXYM wants you to help him to count the number of such permutations modulo 1000000007 (10^9+7).In addition, modulo operation is to get the remainder. For example:  7 \\mod 3=1, because 7 = 3 dot 2 + 1,  15 \\mod 4=3, because 15 = 4 dot 3 + 3. ",
    "input_details": "The input consists of multiple test cases. The first line contains an integer t (t  1) — the number of test cases. The description of the test cases follows.Only one line of each test case contains an integer n(1  n  10^5).It is guaranteed that the sum of n over all test cases does not exceed 10^5",
    "output_details": "For each test case, print the answer in a single line.",
    "sample_input": "4\n1\n2\n9\n91234",
    "sample_output": "1\n12\n830455698\n890287984",
    "tags": ["combinatorics", "math", "number theory", "*800"]
  },
  {
    "name": "Problems for Codeforces",
    "question_id": "problems-for-codeforces",
    "question": "XYMXYM and CQXYM will prepare n problems for Codeforces. The difficulty of the problem i will be an integer a_i, where a_i  0. The difficulty of the problems must satisfy a_i+a_{i+1}<m (1  i < n), and a_1+a_n<m, where m is a fixed integer. XYMXYM wants to know how many plans of the difficulty of the problems there are modulo 998\\,244\\,353.Two plans of difficulty a and b are different only if there is an integer i (1  i  n) satisfying a_i  b_i.",
    "input_details": "A single line contains two integers n and m (2  n  50\\,000, 1  m  10^9).",
    "output_details": "Print a single integer — the number of different plans.",
    "sample_input": "3 2",
    "sample_output": "4",
    "tags": ["combinatorics", "fft", "math", "*3300"]
  },
  {
    "name": "Railway Construction",
    "question_id": "railway-construction",
    "question": "Because the railway system in Gensokyo is often congested, as an enthusiastic engineer, Kawasiro Nitori plans to construct more railway to ease the congestion.There are n stations numbered from 1 to n and m two-way railways in Gensokyo. Every two-way railway connects two different stations and has a positive integer length d. No two two-way railways connect the same two stations. Besides, it is possible to travel from any station to any other using those railways. Among these n stations, station 1 is the main station. You can get to any station from any other station using only two-way railways.Because of the technological limitation, Nitori can only construct one-way railways, whose length can be arbitrary positive integer. Constructing a one-way railway from station u will costs w_u units of resources, no matter where the railway ends. To ease the congestion, Nitori plans that after construction there are at least two shortest paths from station 1 to any other station, and these two shortest paths do not pass the same station except station 1 and the terminal. Besides, Nitori also does not want to change the distance of the shortest path from station 1 to any other station.Due to various reasons, sometimes the cost of building a new railway will increase uncontrollably. There will be a total of q occurrences of this kind of incident, and the i-th event will add additional amount of x_i to the cost of building a new railway from the station k_i.To save resources, before all incidents and after each incident, Nitori wants you to help her calculate the minimal cost of railway construction.",
    "input_details": "The first line contains three integers n, m, and q (1  n  2 dot 10^5, 1  m  3 dot 10^5, 0  q  2dot10^5).The second line contains n integers w_1,w_2,.......,w_n (1  w_i  10^9).Each of the next m lines contains three integers u, v, d (1  u,v  n, u \\ne v, 1  d  10^9), denoting a two-way railway connecting station u and station v, with length d.The i-th of the next q lines contains two integers k_i,x_i (1  k_i  n, 1  x_i  4 \\times 10^8).",
    "output_details": "Print q+1 lines, and the i-th of these lines contains one integer, denoting the minimal cost of railway construction after the i-1-th incident (especially, the 0-th incident means no incident occurred).",
    "sample_input": "5 5 1\n1 1 1 1 1\n1 2 1\n2 3 1\n2 4 1\n3 5 1\n4 5 1\n1 2",
    "sample_output": "3\n9",
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "shortest paths",
      "*3400"
    ]
  },
  {
    "name": "Subsequence",
    "question_id": "subsequence",
    "question": "Alice has an integer sequence a of length n and all elements are different. She will choose a subsequence of a of length m, and defines the value of a subsequence a_{b_1},a_{b_2},.......,a_{b_m} as \\sum_{i = 1}^m (m dot a_{b_i}) - \\sum_{i = 1}^m \\sum_{j = 1}^m f(\\min(b_i, b_j), \\max(b_i, b_j)), where f(i, j) denotes \\min(a_i, a_{i + 1}, ......., a_j).Alice wants you to help her to maximize the value of the subsequence she choose.A sequence s is a subsequence of a sequence t if s can be obtained from t by deletion of several (possibly, zero or all) elements.",
    "input_details": "The first line contains two integers n and m (1  m  n  4000).The second line contains n distinct integers a_1, a_2, ......., a_n (1  a_i < 2^{31}).",
    "output_details": "Print the maximal value Alice can get.",
    "sample_input": "6 4\n15 2 18 12 13 4",
    "sample_output": "100",
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "greedy",
      "trees",
      "*2900"
    ]
  },
  {
    "name": "Train Maintenance",
    "question_id": "train-maintenance",
    "question": "Kawasiro Nitori is excellent in engineering. Thus she has been appointed to help maintain trains.There are n models of trains, and Nitori's department will only have at most one train of each model at any moment. In the beginning, there are no trains, at each of the following m days, one train will be added, or one train will be removed. When a train of model i is added at day t, it works for x_i days (day t inclusive), then it is in maintenance for y_i days, then in work for x_i days again, and so on until it is removed.In order to make management easier, Nitori wants you to help her calculate how many trains are in maintenance in each day.On a day a train is removed, it is not counted as in maintenance.",
    "input_details": "The first line contains two integers n, m (1  n,m  2 dot 10^5).The i-th of the next n lines contains two integers x_i,y_i (1  x_i,y_i  10^9).Each of the next m lines contains two integers op, k (1  k  n, op = 1 or op = 2). If op=1, it means this day's a train of model k is added, otherwise the train of model k is removed. It is guaranteed that when a train of model x is added, there is no train of the same model in the department, and when a train of model x is removed, there is such a train in the department.",
    "output_details": "Print m lines, The i-th of these lines contains one integers, denoting the number of trains in maintenance in the i-th day.",
    "sample_input": "3 4\n10 15\n12 10\n1 1\n1 3\n1 1\n2 1\n2 3",
    "sample_output": "0\n1\n0\n0",
    "tags": ["brute force", "data structures", "implementation", "*2200"]
  },
  {
    "name": "Mathematics Curriculum",
    "question_id": "mathematics-curriculum",
    "question": "Let c_1, c_2, ......., c_n be a permutation of integers 1, 2, ......., n. Consider all subsegments of this permutation containing an integer x. Given an integer m, we call the integer x good if there are exactly m different values of maximum on these subsegments.Cirno is studying mathematics, and the teacher asks her to count the number of permutations of length n with exactly k good numbers.Unfortunately, Cirno isn't good at mathematics, and she can't answer this question. Therefore, she asks you for help.Since the answer may be very big, you only need to tell her the number of permutations modulo p.A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).A sequence a is a subsegment of a sequence b if a can be obtained from b by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.",
    "input_details": "The first line contains four integers n, m, k, p (1  n  100, 1  m  n, 1  k  n, 1  p  10^9).",
    "output_details": "Output the number of permutations modulo p.",
    "sample_input": "4 3 2 10007",
    "sample_output": "4",
    "tags": ["brute force", "combinatorics", "dp", "trees", "*2600"]
  },
  {
    "name": "Portal",
    "question_id": "portal",
    "question": "CQXYM found a rectangle A of size n \\times m. There are n rows and m columns of blocks. Each block of the rectangle is an obsidian block or empty. CQXYM can change an obsidian block to an empty block or an empty block to an obsidian block in one operation.A rectangle M size of a \\times b is called a portal if and only if it satisfies the following conditions:  a  5,b  4.  For all 1 < x < a, blocks M_{x,1} and M_{x,b} are obsidian blocks.  For all 1 < x < b, blocks M_{1,x} and M_{a,x} are obsidian blocks.  For all 1<x<a,1<y<b, block M_{x,y} is an empty block.  M_{1, 1}, M_{1, b}, M_{a, 1}, M_{a, b} can be any type.  Note that the there must be a rows and b columns, not b rows and a columns.Note that corners can be any typeCQXYM wants to know the minimum number of operations he needs to make at least one sub-rectangle a portal.",
    "input_details": "The first line contains an integer t (t  1), which is the number of test cases.For each test case, the first line contains two integers n and m (5  n  400, 4  m  400). Then n lines follow, each line contains m characters 0 or 1. If the j-th character of i-th line is 0, block A_{i,j} is an empty block. Otherwise, block A_{i,j} is an obsidian block.It is guaranteed that the sum of n over all test cases does not exceed 400.It is guaranteed that the sum of m over all test cases does not exceed 400.",
    "output_details": "Output t answers, and each answer in a line.",
    "sample_input": "1\n5 4\n1000\n0000\n0110\n0000\n0001",
    "sample_output": "12",
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "*1700"
    ]
  },
  {
    "name": "Minimal Coverage",
    "question_id": "minimal-coverage",
    "question": "You are given n lengths of segments that need to be placed on an infinite axis with coordinates.The first segment is placed on the axis so that one of its endpoints lies at the point with coordinate 0. Let's call this endpoint the \"start\" of the first segment and let's call its \"end\" as that endpoint that is not the start. The \"start\" of each following segment must coincide with the \"end\" of the previous one. Thus, if the length of the next segment is d and the \"end\" of the previous one has the coordinate x, the segment can be placed either on the coordinates [x-d, x], and then the coordinate of its \"end\" is x - d, or on the coordinates [x, x+d], in which case its \"end\" coordinate is x + d.The total coverage of the axis by these segments is defined as their overall union which is basically the set of points covered by at least one of the segments. It's easy to show that the coverage will also be a segment on the axis. Determine the minimal possible length of the coverage that can be obtained by placing all the segments on the axis without changing their order.",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.The next 2t lines contain descriptions of the test cases. The first line of each test case description contains an integer n (1  n  10^4) — the number of segments. The second line of the description contains n space-separated integers a_i (1  a_i  1000) — lengths of the segments in the same order they should be placed on the axis.It is guaranteed that the sum of n over all test cases does not exceed 10^4.",
    "output_details": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer — the minimal possible length of the axis coverage.",
    "sample_input": "6\n2\n1 3\n3\n1 2 3\n4\n6 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6",
    "sample_output": "3\n3\n9\n9\n7\n8",
    "tags": ["dp", "*2200"]
  },
  {
    "name": "Array Stabilization (AND version)",
    "question_id": "array-stabilization-and-version",
    "question": "You are given an array a[0 ....... n - 1] = [a_0, a_1, ......., a_{n - 1}] of zeroes and ones only. Note that in this problem, unlike the others, the array indexes are numbered from zero, not from one.In one step, the array a is replaced by another array of length n according to the following rules:   First, a new array a^{\\rightarrow d} is defined as a cyclic shift of the array a to the right by d cells. The elements of this array can be defined as a^{\\rightarrow d}_i = a_{(i + n - d) \\bmod n}, where (i + n - d) \\bmod n is the remainder of integer division of i + n - d by n.  It means that the whole array a^{\\rightarrow d} can be represented as a sequence a^{\\rightarrow d} = [a_{n - d}, a_{n - d + 1}, ......., a_{n - 1}, a_0, a_1, ......., a_{n - d - 1}]  Then each element of the array a_i is replaced by a_i \\,\\&\\, a^{\\rightarrow d}_i, where \\& is a logical \"AND\" operator. For example, if a = [0, 0, 1, 1] and d = 1, then a^{\\rightarrow d} = [1, 0, 0, 1] and the value of a after the first step will be [0 \\,\\&\\, 1, 0 \\,\\&\\, 0, 1 \\,\\&\\, 0, 1 \\,\\&\\, 1], that is [0, 0, 0, 1].The process ends when the array stops changing. For a given array a, determine whether it will consist of only zeros at the end of the process. If yes, also find the number of steps the process will take before it finishes.",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.The next 2t lines contain descriptions of the test cases. The first line of each test case description contains two integers: n (1  n  10^6) — array size and d (1  d  n) — cyclic shift offset. The second line of the description contains n space-separated integers a_i (0  a_i  1) — elements of the array.It is guaranteed that the sum of n over all test cases does not exceed 10^6.",
    "output_details": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer — the number of steps after which the array will contain only zeros for the first time. If there are still elements equal to 1 in the array after the end of the process, print -1.",
    "sample_input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 0 1\n1 1\n0",
    "sample_output": "1\n1\n3\n-1\n0",
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory",
      "shortest paths",
      "*1700"
    ]
  },
  {
    "name": " Array Optimization by Deque",
    "question_id": "array-optimization-by-deque",
    "question": "In fact, the problems E1 and E2 do not have much in common. You should probably think of them as two separate problems.You are given an integer array a[1 ....... n] = [a_1, a_2, ......., a_n].Let us consider an empty deque (double-ended queue). A deque is a data structure that supports adding elements to both the beginning and the end. So, if there are elements [3, 4, 4] currently in the deque, adding an element 1 to the beginning will produce the sequence [olor{red}{1}, 3, 4, 4], and adding the same element to the end will produce [3, 4, 4, olor{red}{1}].The elements of the array are sequentially added to the initially empty deque, starting with a_1 and finishing with a_n. Before adding each element to the deque, you may choose whether to add it to the beginning or to the end.For example, if we consider an array a = [3, 7, 5, 5], one of the possible sequences of actions looks like this: \\quad 1.add 3 to the beginning of the deque:deque has a sequence [olor{red}{3}] in it;\\quad 2.add 7 to the end of the deque:deque has a sequence [3, olor{red}{7}] in it;\\quad 3.add 5 to the end of the deque:deque has a sequence [3, 7, olor{red}{5}] in it;\\quad 4.add 5 to the beginning of the deque:deque has a sequence [olor{red}{5}, 3, 7, 5] in it;Find the minimal possible number of inversions in the deque after the whole array is processed. An inversion in sequence d is a pair of indices (i, j) such that i < j and d_i > d_j. For example, the array d = [5, 3, 7, 5] has exactly two inversions — (1, 2) and (3, 4), since d_1 = 5 > 3 = d_2 and d_3 = 7 > 5 = d_4.",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.The next 2t lines contain descriptions of the test cases. The first line of each test case description contains an integer n (1  n  2 dot 10^5) — array size. The second line of the description contains n space-separated integers a_i (-10^9  a_i  10^9) — elements of the array.It is guaranteed that the sum of n over all test cases does not exceed 2 dot 10^5.",
    "output_details": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer — the minimal possible number of inversions in the deque after executing the described algorithm.",
    "sample_input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n1 3 1 3 2",
    "sample_output": "2\n0\n1\n0\n1\n2",
    "tags": ["data structures", "greedy", "*1700"]
  },
  {
    "name": " Permutation Minimization by Deque",
    "question_id": "permutation-minimization-by-deque",
    "question": "In fact, the problems E1 and E2 do not have much in common. You should probably think of them as two separate problems.A permutation p of size n is given. A permutation of size n is an array of size n in which each integer from 1 to n occurs exactly once. For example, [1, 4, 3, 2] and [4, 2, 1, 3] are correct permutations while [1, 2, 4] and [1, 2, 2] are not.Let us consider an empty deque (double-ended queue). A deque is a data structure that supports adding elements to both the beginning and the end. So, if there are elements [1, 5, 2] currently in the deque, adding an element 4 to the beginning will produce the sequence [olor{red}{4}, 1, 5, 2], and adding same element to the end will produce [1, 5, 2, olor{red}{4}].The elements of the permutation are sequentially added to the initially empty deque, starting with p_1 and finishing with p_n. Before adding each element to the deque, you may choose whether to add it to the beginning or the end.For example, if we consider a permutation p = [3, 1, 2, 4], one of the possible sequences of actions looks like this: \\quad 1.add 3 to the end of the deque:deque has a sequence [olor{red}{3}] in it;\\quad 2.add 1 to the beginning of the deque:deque has a sequence [olor{red}{1}, 3] in it;\\quad 3.add 2 to the end of the deque:deque has a sequence [1, 3, olor{red}{2}] in it;\\quad 4.add 4 to the end of the deque:deque has a sequence [1, 3, 2, olor{red}{4}] in it;Find the lexicographically smallest possible sequence of elements in the deque after the entire permutation has been processed. A sequence [x_1, x_2, ......., x_n] is lexicographically smaller than the sequence [y_1, y_2, ......., y_n] if there exists such i  n that x_1 = y_1, x_2 = y_2, ......., x_{i - 1} = y_{i - 1} and x_i < y_i. In other words, if the sequences x and y have some (possibly empty) matching prefix, and the next element of the sequence x is strictly smaller than the corresponding element of the sequence y. For example, the sequence [1, 3, 2, 4] is smaller than the sequence [1, 3, 4, 2] because after the two matching elements [1, 3] in the start the first sequence has an element 2 which is smaller than the corresponding element 4 in the second sequence.",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.The next 2t lines contain descriptions of the test cases. The first line of each test case description contains an integer n (1  n  2 dot 10^5) — permutation size. The second line of the description contains n space-separated integers p_i (1  p_i  n; all p_i are all unique) — elements of the permutation.It is guaranteed that the sum of n over all test cases does not exceed 2 dot 10^5.",
    "output_details": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should contain n space-separated integer numbers — the elements of the lexicographically smallest permutation that is possible to find in the deque after executing the described algorithm.",
    "sample_input": "5\n4\n3 1 2 4\n3\n3 2 1\n3\n3 1 2\n2\n1 2\n2\n2 1",
    "sample_output": "1 3 2 4 \n1 2 3 \n1 3 2 \n1 2 \n1 2",
    "tags": ["constructive algorithms", "greedy", "math", "*1000"]
  },
  {
    "name": "Productive Meeting",
    "question_id": "productive-meeting",
    "question": "An important meeting is to be held and there are exactly n people invited. At any moment, any two people can step back and talk in private. The same two people can talk several (as many as they want) times per meeting.Each person has limited sociability. The sociability of the i-th person is a non-negative integer a_i. This means that after exactly a_i talks this person leaves the meeting (and does not talk to anyone else anymore). If a_i = 0, the i-th person leaves the meeting immediately after it starts.A meeting is considered most productive if the maximum possible number of talks took place during it.You are given an array of sociability a, determine which people should talk to each other so that the total number of talks is as large as possible.",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.The next 2t lines contain descriptions of the test cases.The first line of each test case description contains an integer n (2  n  2 dot 10^5) —the number of people in the meeting. The second line consists of n space-separated integers a_1, a_2, \\dots, a_n (0  a_i  2 dot 10^5) — the sociability parameters of all people. It is guaranteed that the sum of n over all test cases does not exceed 2 dot 10^5. It is also guaranteed that the sum of all a_i (over all test cases and all i) does not exceed 2 dot 10^5.",
    "output_details": "Print t answers to all test cases.On the first line of each answer print the number k — the maximum number of talks possible in a meeting.On each of the next k lines print two integers i and j (1  i, j  n and i  j) — the numbers of people who will have another talk.If there are several possible answers, you may print any of them.",
    "sample_input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6",
    "sample_output": "2\n1 2\n1 2\n3\n1 3\n2 3\n2 3\n5\n1 3\n2 4\n2 4\n3 4\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 5\n1 4\n1 2\n1\n5 2",
    "tags": ["constructive algorithms", "graphs", "greedy", "*1400"]
  },
  {
    "name": "Ticks",
    "question_id": "ticks",
    "question": "Casimir has a rectangular piece of paper with a checkered field of size n \\times m. Initially, all cells of the field are white.Let us denote the cell with coordinates i vertically and j horizontally by (i, j). The upper left cell will be referred to as (1, 1) and the lower right cell as (n, m).Casimir draws ticks of different sizes on the field. A tick of size d (d > 0) with its center in cell (i, j) is drawn as follows:   First, the center cell (i, j) is painted black.  Then exactly d cells on the top-left diagonally to the center and exactly d cells on the top-right diagonally to the center are also painted black.  That is all the cells with coordinates (i - h, j \\pm h) for all h between 0 and d are painted. In particular, a tick consists of 2d + 1 black cells. An already painted cell will remain black if painted again. Below you can find an example of the 4 \\times 9 box, with two ticks of sizes 2 and 3.  You are given a description of a checkered field of size n \\times m. Casimir claims that this field came about after he drew some (possibly 0) ticks on it. The ticks could be of different sizes, but the size of each tick is at least k (that is, d \\ge k for all the ticks).Determine whether this field can indeed be obtained by drawing some (possibly none) ticks of sizes d \\ge k or not.",
    "input_details": "The first line contains an integer t (1  t  100) — the number test cases.The following lines contain the descriptions of the test cases. The first line of the test case description contains the integers n, m, and k (1  k  n  10; 1  m  19) — the field size and the minimum size of the ticks that Casimir drew. The following n lines describe the field: each line consists of m characters either being '.' if the corresponding cell is not yet painted or '*' otherwise.",
    "output_details": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be YES if the given field can be obtained by drawing ticks of at least the given size and NO otherwise.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answers).",
    "sample_input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 1\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..",
    "sample_output": "NO\nYES\nYES\nYES\nNO\nNO\nNO\nNO",
    "tags": ["greedy", "implementation", "*1500"]
  },
  {
    "name": "Shifting Sort",
    "question_id": "shifting-sort",
    "question": "The new generation external memory contains an array of integers a[1 ....... n] = [a_1, a_2, ......., a_n].This type of memory does not support changing the value of an arbitrary element. Instead, it allows you to cut out any segment of the given array, cyclically shift (rotate) it by any offset and insert it back into the same place.Technically, each cyclic shift consists of two consecutive actions:   You may select arbitrary indices l and r (1  l < r  n) as the boundaries of the segment.  Then you replace the segment a[l ....... r] with it's cyclic shift to the left by an arbitrary offset d. The concept of a cyclic shift can be also explained by following relations: the sequence [1, 4, 1, 3] is a cyclic shift of the sequence [3, 1, 4, 1] to the left by the offset 1 and the sequence [4, 1, 3, 1] is a cyclic shift of the sequence [3, 1, 4, 1] to the left by the offset 2. For example, if a = [1, olor{blue}{3, 2, 8}, 5], then choosing l = 2, r = 4 and d = 2 yields a segment a[2 ....... 4] = [3, 2, 8]. This segment is then shifted by the offset d = 2 to the left, and you get a segment [8, 3, 2] which then takes the place of of the original elements of the segment. In the end you get a = [1, olor{blue}{8, 3, 2}, 5].Sort the given array a using no more than n cyclic shifts of any of its segments. Note that you don't need to minimize the number of cyclic shifts. Any method that requires n or less cyclic shifts will be accepted.",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.The next 2t lines contain the descriptions of the test cases. The first line of each test case description contains an integer n (2  n  50) — the length of the array. The second line consists of space-separated elements of the array a_i (-10^9  a_i  10^9). Elements of array a may repeat and don't have to be unique.",
    "output_details": "Print t answers to all input test cases. The first line of the answer of each test case should contain an integer k (0  k  n) — the number of actions to sort the array. The next k lines should contain descriptions of the actions formatted as \"l r d\" (without quotes) where l and r (1  l < r  n) are the boundaries of the segment being shifted, while d (1  d  r - l) is the offset value. Please remember that only the cyclic shifts to the left are considered so the chosen segment will be shifted by the offset d to the to the left.Note that you are not required to find the minimum number of cyclic shifts needed for sorting. Any sorting method where the number of shifts does not exceed n will be accepted.If the given array a is already sorted, one of the possible answers is k = 0 and an empty sequence of cyclic shifts.If there are several possible answers, you may print any of them.",
    "sample_input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3",
    "sample_output": "1\n1 2 1\n1\n1 3 2\n3\n2 4 1\n2 3 1\n1 3 2\n4\n2 4 2\n1 5 3\n1 2 1\n1 3 1",
    "tags": ["implementation", "sortings", "*1100"]
  },
  {
    "name": "Casimir's String Solitaire",
    "question_id": "casimirs-string-solitaire",
    "question": "Casimir has a string s which consists of capital Latin letters 'A', 'B', and 'C' only. Each turn he can choose to do one of the two following actions:  he can either erase exactly one letter 'A' and exactly one letter 'B' from arbitrary places of the string (these letters don't have to be adjacent);  or he can erase exactly one letter 'B' and exactly one letter 'C' from arbitrary places in the string (these letters don't have to be adjacent). Therefore, each turn the length of the string is decreased exactly by 2. All turns are independent so for each turn, Casimir can choose any of two possible actions.For example, with s = \"ABCABC\" he can obtain a string s = \"ACBC\" in one turn (by erasing the first occurrence of 'B' and the second occurrence of 'A'). There are also many other options for a turn aside from this particular example.For a given string s determine whether there is a sequence of actions leading to an empty string. In other words, Casimir's goal is to erase all letters from the string. Is there a way to do this?",
    "input_details": "The first line contains an integer t (1  t  1000) — the number of test cases.Each test case is described by one string s, for which you need to determine if it can be fully erased by some sequence of turns. The string s consists of capital letters 'A', 'B', 'C' and has a length from 1 to 50 letters, inclusive.",
    "output_details": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be YES if there is a way to fully erase the corresponding string and NO otherwise.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answers).",
    "sample_input": "6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCBCBCBC",
    "sample_output": "NO\nYES\nNO\nNO\nYES\nYES",
    "tags": ["math", "strings", "*800"]
  },
  {
    "name": "The Mind",
    "question_id": "the-mind",
    "question": "This is an interactive problem.In this problem, you need to come up with a strategy for a cooperative game. This game is played by two players. Each player receives 5 cards. Each card has a random integer between 1 and 100 on it. It is guaranteed that all numbers on cards are distinct.The goal of the game is to play a card with a minimal number on it out of all 10 cards dealt to the players before any other card. The problem is that each player can only see their own cards and cannot communicate with another player in any way.The game consists of 5 turns. During each turn, players simultaneously make a move. Each player can either play their smallest card or do nothing. If on some turn the smallest card is played, and no other card is played on or before that turn, players win. If two cards are played at the same turn or if after all 5 turns, no card is still played, players lose.Players cannot communicate, so a strategy for the game should only be based on 5 cards that the player has. You can describe a strategy as five numbers 0.0  p_i  1.0, \\sum_{i=1}^{5}p_i  1, where p_i — the probability of playing the player's smallest card in their hand on i-th turn. If you know the cards dealt to the players, and the strategies that players choose, you can compute the probability of winning by a simple formula. You will be given n=1000 randomly generated hands of 5 cards. You need to generate a strategy for each of the hands to maximize the probability of winning. After the judge program receives all n strategies, it generates all possible valid pairs of those hands (pairs which have the same numbers are discarded), and computes a probability of winning based on two strategies provided by your program. To ensure that answers for different hands are independent, you must output a strategy for a hand and flush the standard output before reading information about the next hand.If the average probability of winning a game is more than 85% over all valid pairs of hands, the test is considered passed. This problem contains the sample test and 20 randomly generated tests with n = 1000.",
    "input_details": "The first line contains one integer n — the number of hands. It is guaranteed that n = 1000 for all cases except the first sample case. Each of the next n lines contains 5 numbers a_i (1  a_i  100, a_i < a_{i+1}) — the cards in the hand. It is guaranteed that each possible set of 5 cards has an equal probability of being chosen. ",
    "output_details": "For each of the n hands you need to output 5 numbers 0.0  p_i  1.0, \\sum_{i=1}^{5}p_i  1, where p_i — probability of playing the smallest card on i-th turn.",
    "sample_input": "2\n2 12 27 71 100\n\n22 29 39 68 90",
    "sample_output": "0.8 0.2 0.0 0.0 0.0 \n\n0.0 0.2 0.2 0.2 0.3",
    "tags": ["constructive algorithms", "interactive", "probabilities", "*2700"]
  },
  {
    "name": "Labyrinth",
    "question_id": "labyrinth",
    "question": "In a dream, Lucy found herself in a labyrinth. This labyrinth consists of n rooms, connected by m passages (i-th passage is w_i cm wide). Each passage can be traversed in both directions. It is guaranteed that it is possible to get from any room to any other room. But this is not an ordinary labyrinth — each room in this labyrinth contains a magic candy. When Lucy eats this magic candy, she is getting wider. Specifically, if she eats candy from room i she becomes wider by c_i cm. Note that she is not obliged to eat candy the first time she visits a particular room, but she can eat each candy only once. Unfortunately, passages in this labyrinth are pretty narrow, so after eating some candy, Lucy can get too wide and will not be able to traverse them — her width should not be greater than the width of the corresponding passage.Lucy starts her journey in a room number 1. She wants to eat all the candies. After that, she will just wake up, so she does not have to be able to return to the room 1. She realizes that with her current width, she may not be able to do so, so she plans a workout before embarking on her journey. Lucy wants to know if it is possible to start with some positive width and still eat all the candies. If yes, then what is the maximal starting width with which it is possible.",
    "input_details": "The first line contains two integers, n and m (2  n  10^5; n - 1  m  10^5) — the number of rooms and the number of passages.The second line contains n integers — c_i (1  c_i  10^9).Next m lines contain three integers each — a_i, b_i and w_i (1  a_i, b_i  n; a_i \\ne b_i; 1  w_i  10^9) describing passage that connects rooms a_i and b_i and is w_i cm wide. It is guaranteed that the resulting labyrinth is connected and there is at most one passage between any pair of rooms.",
    "output_details": "If it is possible to eat all the candies, output the maximal possible starting width, otherwise output -1.",
    "sample_input": "3 3\n1 2 3\n1 2 4\n1 3 4\n2 3 6",
    "sample_output": "3",
    "tags": ["binary search", "dsu", "greedy", "*2400"]
  },
  {
    "name": "Kingdom of Islands",
    "question_id": "kingdom-of-islands",
    "question": "The Kingdom of Islands consists of p islands. As the king, you rule over the whole kingdom, while each island is ruled over by one or several jarls under your rule. In total, there are n jarls under your jurisdiction.Each island of the kingdom has its own strong traditions, so jarls that rule over the same island support each other and never have conflicts. The downsides of such strength are cultural conflicts between people inhabiting different islands. Thus, two jarls that rule over different islands are in conflict.However, recent years brought a few changes to traditional relations between the jarls. To your knowledge, there are exactly k pairs of jarls such that relationships between two jarls in the pair are different from the traditional. That is, if two jarls of the pair you know rule over the same island, these jarls are in conflict. If they rule over different islands, then they overcome cultural disagreement and there is no conflict between them anymore.As a true responsible king, you are worried about whether the kingdom is close to a major conflict. In order to estimate the current situation, you would like to find the largest possible group of jarls such that every two jarls in the group are in conflict.",
    "input_details": "The first line of the input consists of two integers p and n (1  p  n  10^5; 1  p  10^4).The second line consists of n integers s_1, s_2, ......., s_n (1  s_i  p). The integer s_i denotes that the i-th jarl rules over the island number s_i. It is guaranteed that each island is ruled by at least one jarl.The third line consists of a single integer k (0  k  20).Then k lines follow. The j-th of these lines consists of two distinct integers a_j and b_j (1  a_j < b_j  n), denoting that the relation between the a_j-th jarl and the b_j-th jarl differs from traditional. It is guaranteed that no pair of jarls appears twice in this list.",
    "output_details": "In the first line print a single integer q between 1 and n — the largest possible number of jarls in a pairwise conflicting group. In the second line print q distinct integers between 1 and n — the numbers of jarls in the group. The numbers of jarls can be printed in any order.",
    "sample_input": "4 4\n1 2 3 4\n1\n2 3",
    "sample_output": "3\n1 4 2",
    "tags": ["brute force", "graphs", "implementation", "*2800"]
  },
  {
    "name": "Just Kingdom",
    "question_id": "just-kingdom",
    "question": "The Just Kingdom is ruled by a king and his n lords, numbered 1 to n. Each of the lords is a vassal of some overlord, who might be the king himself, or a different lord closer to the king. The king, and all his lords, are just and kind.Each lord has certain needs, which can be expressed as a certain amount of money they need. However, if a lord, or the king, receives any money, they will first split it equally between all their vassals who still have unmet needs. Only if all the needs of all their vassals are met, they will take the money to fulfill their own needs. If there is any money left over, they will return the excess to their overlord (who follows the standard procedure for distributing money).At the beginning of the year, the king receives a certain sum of tax money and proceeds to split it according to the rules above. If the amount of tax money is greater than the total needs of all the lords, the procedure guarantees everybody's needs will be fulfilled, and the excess money will be left with the king. However, if there is not enough money, some lords will not have their needs met.For each lord, determine the minimum amount of tax money the king has to receive so that this lord's needs are met.",
    "input_details": "The first line of the input contains the number of lords n (0  n  3 dot 10^5). Each of the next n lines describes one of the lords. The i-th line contains two integers: o_i (0  o_i < i) — the index of the overlord of the i-th lord (with zero meaning the king is the overlord), and m_i (1  m_i  10^6) — the amount of money the i-th lord needs.",
    "output_details": "Print n integer numbers t_i. The i-th number should be the minimum integer amount of tax money the king has to receive for which the needs of the i-th lord will be met.",
    "sample_input": "5\n0 2\n1 2\n0 1\n1 1\n0 5",
    "sample_output": "11\n7\n3\n5\n11",
    "tags": ["brute force", "data structures", "dfs and similar", "*3100"]
  },
  {
    "name": "Interactive Rays",
    "question_id": "interactive-rays",
    "question": "This is an interactive problem.Your goal is to find a circle on a plane by shooting rays and getting the distance to the circle as a result. Interactor has three hidden integer parameters that are determined in advance for each test, but which you don't know — x_c, y_c, and r_c. (x_c, y_c) are coordinates of the circle's center and r_c is its radius. The absolute values of x_c, y_c, and r_c do not exceed 10^5, and 1  r_c  \\sqrt{x_c^2 + y_c^2} - 1.You can shoot rays that extend from the origin (0,0) and go via a point (x_q,y_q) with the integer coordinates you specify. For each ray, you get a distance from the ray to the circle or 0 if the ray intersects the circle. ",
    "input_details": "actionThe interaction starts with your program printing a query to the standard output and finishes when your program finds and prints the answer to the problem.Each query has a form of \"? x_q y_q\", where x_q and y_q are integers (|x_q|, |y_q|  10^6; x_q \\ne 0 or y_q \\ne 0). The interactor outputs a line with a single floating-point number — the distance between a query ray and a circle that is precise to 10^{-10} by an absolute value.Your program can make the next query, read the output, and so on. You are allowed to do at most 60 queries. At the end of the interaction, print the answer line \"! x_c y_c r_c\", flush the output and exit.Note, that the output of the interactor is actually rounded to the 10-th digit after a decimal point, so if you are stress-testing your solution locally, make sure that you also perform the corresponding rounding.",
    "output_details": "eInput? 0 -10\n\n? 10 -10\n\n? 10 0\n\n? 10 10\n\n? 10 20\n\n? 10 30\n\n! 20 10 10Output12.360679775\n\n11.2132034356\n\n0.0\n\n0.0\n\n3.416407865\n\n5.8113883008",
    "sample_input": "t12.360679775\n\n11.2132034356\n\n0.0\n\n0.0\n\n3.416407865\n\n5.8113883008",
    "sample_output": "Illustration of the queries from the example interaction.",
    "tags": ["geometry", "interactive", "*3300"]
  },
  {
    "name": "Higher Order Functions",
    "question_id": "higher-order-functions",
    "question": "Helen studies functional programming and she is fascinated with a concept of higher order functions — functions that are taking other functions as parameters. She decides to generalize the concept of the function order and to test it on some examples. For her study, she defines a simple grammar of types. In her grammar, a type non-terminal T is defined as one of the following grammar productions, together with \\textrm{order}(T), defining an order of the corresponding type: \"()\" is a unit type, \\textrm{order}(\\textrm{\"}\\texttt{()}\\textrm{\"}) = 0. \"(\" T \")\" is a parenthesized type, \\textrm{order}(\\textrm{\"}\\texttt{(}\\textrm{\"}\\,T\\,\\textrm{\"}\\texttt{)}\\textrm{\"}) = \\textrm{order}(T). T_1 \"->\" T_2 is a functional type, \\textrm{order}(T_1\\,\\textrm{\"}\\texttt{->}\\textrm{\"}\\,T_2) = max(\\textrm{order}(T_1) + 1, \\textrm{order}(T_2)). The function constructor T_1 \"->\" T_2 is right-to-left associative, so the type \"()->()->()\" is the same as the type \"()->(()->())\" of a function returning a function, and it has an order of 1. While \"(()->())->()\" is a function that has an order-1 type \"(()->())\" as a parameter, and it has an order of 2.  Helen asks for your help in writing a program that computes an order of the given type.",
    "input_details": "The single line of the input contains a string consisting of characters '(', ')', '-', and '>' that describes a type that is valid according to the grammar from the problem statement. The length of the line is at most 10^4 characters.",
    "output_details": "Print a single integer — the order of the given type.",
    "sample_input": "()",
    "sample_output": "0",
    "tags": ["implementation", "strings", "*1700"]
  },
  {
    "name": "Game of Chance",
    "question_id": "game-of-chance",
    "question": "The King wants to marry off his daughter, and he wants her husband to have the greatest innate luckiness possible. To find such a person he decided to hold a heads-or-tails tournament. If person A with luckiness x and person B with luckiness y play heads-or-tails against each other, person A wins with probability x/(x+y). The tournament has several rounds. Each round some participants are split into pairs. Each pair plays against each other, and the loser leaves the tournament. The participants are numbered from 1 to n. During the first round, a number k (1  k  n) is selected such that n-k/2 is a power of 2 (such k always exists and is unique). Only participants numbered from 1 to k take part in the first round. It ensures that in all other rounds the number of participants is the power of 2. During other rounds, all the participants who still have not left the tournament take part. If during some round, participants numbered p_1 < ....... < p_{2m} take part, then they are split into pairs in the following manner: participant p_{2i-1} plays against participant p_{2i} for each i from 1 to m. The rounds are held until only one participant is left. He is declared the winner of the tournament and he will marry the King's daughter. The princess can't wait to find out who is her future husband. She asked every participant to tell her his luckiness. Assuming they did not lie, she wants to know the probability of each participant winning the tournament. As you are the best friend of the princess, she asks you to help her.",
    "input_details": "The first line of the input contains the number of participants, n (2  n  3 dot 10^5). The second line of the input contains n integer numbers, a_1, ......., a_{n} (1  a_i  10^9). The luckiness of the i-th participant equals to a_i.",
    "output_details": "Print n numbers p_i. The i-th number should be the probability of the i-th participant winning the tournament. The absolute error of your answer must not exceed 10^{-9}.",
    "sample_input": "5\n1 4 1 1 4",
    "sample_output": "0.026 0.3584 0.0676 0.0616 0.4864",
    "tags": ["math", "probabilities", "*3500"]
  },
  {
    "name": "Framing Pictures",
    "question_id": "framing-pictures",
    "question": "Life has been discovered on Venus! What is more, the life forms appear to be convex polygons. An international consortium is designing a probe to send to Venus to take pictures, but they need to estimate the bandwidth needed to send back pictures.When the probe takes a picture of a life form and wishes to send it back to Earth, the bandwidth required is proportional to the area of the bounding box (in other words, the smallest axis-aligned rectangle that contains the life-form). The shape and size of the life forms are known, but the orientation relative to the camera is random. You must thus determine the expected (average) area of the bounding box across all orientations.",
    "input_details": "The input describes the shape of a life form as a convex polygon in two dimensions.The first line of input contains an integer n (3  n  200\\,000) — the number of vertices. The remaining n lines each contain two integers x and y (-10^9  x, y  10^9) — the coordinates of a vertex. The vertices are given in counterclockwise order, and no three vertices lie on a straight line.",
    "output_details": "Output a single line containing the expected area of the bounding box of the polygon. Your answer should have an absolute or relative error of at most 10^{-6}.",
    "sample_input": "4\n0 0\n10 0\n10 10\n0 10",
    "sample_output": "163.661977237",
    "tags": ["geometry", "*2900"]
  },
  {
    "name": "Easy Scheduling",
    "question_id": "easy-scheduling",
    "question": "Eonathan Eostar decided to learn the magic of multiprocessor systems. He has a full binary tree of tasks with height h. In the beginning, there is only one ready task in the tree — the task in the root. At each moment of time, p processes choose at most p ready tasks and perform them. After that, tasks whose parents were performed become ready for the next moment of time. Once the task becomes ready, it stays ready until it is performed. You shall calculate the smallest number of time moments the system needs to perform all the tasks.",
    "input_details": "The first line of the input contains the number of tests t (1  t  5dot 10^5). Each of the next t lines contains the description of a test. A test is described by two integers h (1  h  50) and p (1  p  10^4) — the height of the full binary tree and the number of processes. It is guaranteed that all the tests are different.",
    "output_details": "For each test output one integer on a separate line — the smallest number of time moments the system needs to perform all the tasks.",
    "sample_input": "3\n3 1\n3 2\n10 6",
    "sample_output": "7\n4\n173",
    "tags": ["implementation", "math", "*1200"]
  },
  {
    "name": "Dragon Curve",
    "question_id": "dragon-curve",
    "question": "A dragon curve is a self-similar fractal curve. In this problem, it is a curve that consists of straight-line segments of the same length connected at right angles. A simple way to construct a dragon curve is as follows: take a strip of paper, fold it in half n times in the same direction, then partially unfold it such that the segments are joined at right angles. This is illustrated here:  In this example, a dragon curve of order 3 is constructed. In general, a dragon curve of a higher order will have a dragon curve of a lower order as its prefix. This allows us to define a dragon curve of infinite order, which is the limit of dragon curves of a finite order as the order approaches infinity.Consider four dragon curves of infinite order. Each starts at the origin (the point (0,0)), and the length of each segment is \\sqrt2. The first segments of the curves end at the points (1,1), (-1,1), (-1,-1) and (1,-1), respectively. The first turn of each curve is left (that is, the second segment of the first curve ends at the point (0,2)). In this case, every segment is a diagonal of an axis-aligned unit square with integer coordinates, and it can be proven that there is exactly one segment passing through every such square.Given a point (x,y), your task is to find on which of the four curves lies the segment passing through the square with the opposite corners at (x,y) and (x+1,y+1), as well as the position of that segment on that curve. The curves are numbered 1 through 4. Curve 1 goes through (1,1), 2 through (-1,1), 3 through (-1,-1), and 4 through (1,-1). The segments are numbered starting with 1.",
    "input_details": "The first line contains an integer n (1 n2dot10^5) — the number of test cases.Each of the following n lines contains two integers x and y (-10^9 x,y10^9) — the coordinates.",
    "output_details": "For each test case, print a line containing two integers — the first is the index of the curve (an integer between 1 and 4, inclusive), and the second is the position on the curve (the first segment has the position 1).",
    "sample_input": "5\n0 0\n-2 0\n-7 -7\n5 -9\n9 9",
    "sample_output": "1 1\n2 2\n3 189\n4 186\n2 68",
    "tags": ["*3200"]
  },
  {
    "name": "Cactus Lady and her Cing",
    "question_id": "cactus-lady-and-her-cing",
    "question": "Cactus lady loves her cactuses very much. Especially she likes a small cactus named Cing. Cing can be seen as a connected undirected graph in which every vertex lies on at most one simple cycle. Intuitively, a cactus is a generalization of a tree where some cycles are allowed. Multiedges (multiple edges between a pair of vertices) and loops (edges that connect a vertex to itself) are not allowed.She bought a special grid for her special little cactus Cing. This grid can be represented as a graph consisting of two paths of length 400\\,000, u_{(0, -200\\,000)} - u_{(0, -199\\,999)} - ....... - u_{(0, 200\\,000)} and u_{(1, -200\\,000)} - u_{(1, -199\\,999)} - ....... - u_{(1, 200\\,000)}, connected together by 400\\,001 edges (u_{(0, i)}, u_{(1, i)}) for each i. In other words, a grid can be seen as a ladder.  Cactus lady wants to know whether she can embed Cing into this grid, i.e., map each vertex of the cactus onto a separate vertex of the grid while each edge of the cactus will be mapped onto some edge of the grid.",
    "input_details": "The first line contains an integer t — the number of test cases.Each test case begins with a line containing two integers n and m — the number of vertices and the number of edges in a given cactus, respectively (1  n  200\\,000; 0  m  250\\,000).Each of the following m lines contains two integers v and u, describing the edges of the cactus (1  v, u  n, u \\ne v).The total sum of all n in the input doesn't exceed 200\\,000.",
    "output_details": "Print an answer for each test case in the same order the cases appear in the input.For each test case print \"No\" in the first line, if no layout exists.Otherwise print \"Yes\" in the first line, and the following n lines describing the layout. The i-th of these n lines should contain two integers x_i and y_i, the location of the i-th vertex (0  x_i  1; -200\\,000  y_i  200\\,000).",
    "sample_input": "5\n4 3\n1 2\n2 3\n3 4\n\n8 7\n1 2\n3 2\n2 4\n4 5\n4 6\n6 7\n6 8\n\n5 4\n1 2\n1 3\n1 4\n1 5\n\n8 9\n1 2\n2 3\n3 4\n1 4\n4 5\n5 6\n6 7\n7 8\n5 8\n\n10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n3 7\n4 8\n1 9\n6 10",
    "sample_output": "Yes\n0 0\n0 1\n1 1\n1 2\nYes\n0 3\n1 3\n1 4\n1 2\n0 2\n1 1\n0 1\n1 0\nNo\nYes\n0 0\n1 0\n1 1\n0 1\n0 2\n0 3\n1 3\n1 2\nYes\n1 1\n1 2\n1 3\n0 3\n0 2\n0 1\n1 4\n0 4\n1 0\n0 0",
    "tags": ["*3500"]
  },
  {
    "name": "Building Forest Trails",
    "question_id": "building-forest-trails",
    "question": "There are n villages lying equidistant on a circle in the middle of a thick, impassable forest. From ancient times, it was impossible to move from one village to another, but technical progress has changed a lot. Now, there is a technology to build passable trails in the forest. The building process consists of m events. Each event is either building a trail or querying if two villages are connected. Trails are built as straight lines connecting two villages. After a trail is built, anybody can walk along the trail from one village to another. Moreover, if two trails cross, anybody can turn at the intersection, and if other trails leave a village you have just reached, they can also be used to walk along. So, for example, if villages are numbered 1 to 6 in the order around the circle, and there are trails 1 to 3, 2 to 4, and 4 to 6, then all villages, except the 5-th, are reachable from the 1-st village.Given a list of m events, for each query, find if two given villages are reachable from each other at that moment.",
    "input_details": "The first line contains two integers n (2  n  2dot 10^5) and m (1  m  3dot 10^5) — the number of villages and the number of events respectively. Next m lines contain events. Each event description consists of three integers e (e is 1 or 2), v (1  v  n), and u (1  u  n, u \\ne v). If e = 1, then the event is building a trail between villages v and u. If e = 2, then the event is a query if the villages v and u are connected. It is guaranteed that each trail is built at most once. Villages are numbered 1 to n in clockwise order around the circle. ",
    "output_details": "For each query print one character '0' if villages are not reachable, and '1' if villages are reachable from each other. Print answers for all queries as a single string in one line.",
    "sample_input": "6 9\n1 1 3\n1 4 6\n2 3 4\n1 2 4\n2 1 2\n2 1 3\n2 1 4\n2 6 1\n2 5 3",
    "sample_output": "011110",
    "tags": ["data structures", "dsu", "*2800"]
  },
  {
    "name": "Anti-Tetris",
    "question_id": "anti-tetris",
    "question": "Let us consider the game \"Sticky Tetris\". In this game, there is a field of n \\times m squares. Tiles appear on the field and the player can move the tiles. Each tile is a 4-connected set of at most 7 squares.Each new tile appears in any position that fits inside the field, does not intersect any other tile, and the top cell of the tile is at the top row of the field. The player can move the tile left, right, and down, and at any moment the tile must still entirely fit inside the field and must not intersect other tiles. The player can stop the tile at any position at any time. After that, it cannot be moved. Since this is \"Sticky Tetris,\" the tile will not fall once stopped.You are given a final configuration of a \"Sticky Tetris\" game. You need to restore a sequence of steps that leads to that configuration if it exists.",
    "input_details": "The first line contains two integers n and m (1  n, m  50) — the size of the playing field.The next n lines contain a string of m characters each. Each character could be either a '.', or lowercase English letter. Connected components of the same letter correspond to a single tile. Each tile consists of at most 7 squares.",
    "output_details": "If there is no solution, print -1.Otherwise, print k — the number of different tiles that are placed on the field.On the next k lines print the sequence of steps for each of the tiles in the order they are placed. Each line consists of a number x followed by a string with steps. x (1  x  m) is the starting column of the leftmost square in the top row of the tile. The string consists of characters 'L' (for left), 'R' (for right), and 'D' (for down), describing the path of that tile, ending with a single character 'S' (for stop). The final position of the tile determines which tile is being placed. The string with steps can have at most n dot m + 1 characters.",
    "sample_input": "3 2\naa\nab\naa",
    "sample_output": "2\n2 DS\n1 S",
    "tags": ["constructive algorithms", "graphs", "shortest paths", "*2800"]
  },
  {
    "name": "Communication Routing Challenge",
    "question_id": "communication-routing-challenge",
    "question": "In optical communication networks, appropriate path planning can improve the utilization of communication resources and bring a smooth communication experience to users. The following figure shows an inter-satellite optical communication network. User messages are sent from one terrestrial base station (nodes 4 to 7) and transmitted through satellites (nodes 0 to 3) in space to another terrestrial base station (nodes 4 to 7).    In the preceding figures, there are communication connections (edges for short) between base stations and satellites and between satellites. The base stations and satellites are referred to as nodes. User messages are transmitted on these edges and referred to as flows. Some users may make video calls with friends, and some users may send short messages to their family members. Therefore, the message traffic (called flow rate) of each user differs. There are many parallel edges (for example, edges 0, 1, and 2) between two nodes, and the capacity of each edge also differs. Larger capacity indicates that more user messages can be transmitted, as well as shorter transmission distance indicates lower latency and better communication quality. Nodes also have their internal structure. As shown below, some edges inside a node cannot communicate with each other because these edges (constrained edge pair) are not fully connected. For example, edge 5 and edge 7 inside node 2 cannot communicate with each other, and therefore flows cannot pass through node 2 by traversing the two unconnected edges.    Now, in the input network, the source node, target node, and required flow rate for each user flow are specified. Because network resources are limited, paths may not be successfully calculated for all user flows. We hope that you can provide a solution with the highest score.Note, that   all edges are undirected, so flows may come in both directions,  edges has both capacity and length (named distance),  several flows may use the same edge,  flows may come through the same edge in opposite directions simultaneously,  for the purpose of this problem, there is no difference between satellites and base stations, so flows may come through several base stations before reaching the destination station.  Constraints   The capacity of each edge is limited. The total rate of all flows carried by an edge cannot exceed the capacity of the edge. The capacity limits the total flows in both directions.   The calculated flow path does not allow loops or cycles.   Due to the hardware limitation inside satellites, the number of flows passing through a node (including source and target node) cannot exceed the site flow limit (\\mathit{SFL}) of the node. The value of \\mathit{SFL} is 200.   There are multiple parallel edges between two nodes, which may belong to different groups. Links in each group are managed by the same chip on a node, and there is a group flow limit (\\mathit{GFL}). The total number of different flows on all the edges in a group cannot exceed the \\mathit{GFL} of the group. The value of \\mathit{GFL} is 100.   By default, all edges are connected to each other in each node. But there are some constrained edge pairs — the pairs of edges inside specified nodes that cannot communicate with each other.   You can make no more than 2 submissions on each 5 minutes interval. ",
    "input_details": "The first line contains four integers separated by space: \\mathit{NodeCount}, \\mathit{EdgeCount}, \\mathit{ConstrainedCount}, and \\mathit{FlowCount}.  8  \\mathit{NodeCount}  1400,  15  \\mathit{EdgeCount}  15000,  3  \\mathit{ConstrainedCount}  3600,  1  \\mathit{FlowCount}  14000. The next \\mathit{EdgeCount} lines contain information about the network. Each line contains six integers: \\mathit{EdgeID}, \\mathit{GroupID}, \\mathit{StartNodeID}, \\mathit{EndNodeID}, \\mathit{Distance}, and \\mathit{Capacity}.  0  \\mathit{EdgeID} < \\mathit{EdgeCount},  0  \\mathit{GroupID}  4500,  0  \\mathit{StartNodeID}, \\mathit{EndNodeID} < \\mathit{NodeCount},  \\mathit{StartNodeID} \\ne \\mathit{EndNodeID},  100  \\mathit{Distance}  10000,  1 < \\mathit{Capacity}  10^5. It's guaranteed that only multiple edges may share the same \\mathit{GroupID}.The next \\mathit{ConstrainedCount} lines contain information about the edge pairs that are not connected in the specified nodes of the network. All other edges are connected to each other by default. Each line contains three integers: \\mathit{NodeID}, \\mathit{EdgeID}_1, and \\mathit{EdgeID}_2.  0  \\mathit{NodeID} < \\mathit{NodeCount},  0  \\mathit{EdgeID}_1, \\mathit{EdgeID}_2 < \\mathit{EdgeCount},  \\mathit{EdgeID}_1 \\ne \\mathit{EdgeID}_2. The next \\mathit{FlowCount} lines contain information about the flows to be calculated. Each line contains four integers: \\mathit{FlowID}, \\mathit{SourceNode}, \\mathit{TargetNode}, and \\mathit{FlowRate}.  0  \\mathit{FlowID} < \\mathit{FlowCount},  0  \\mathit{SourceNode}, \\mathit{TargetNode} < \\mathit{NodeCount},  \\mathit{SourceNode} \\ne \\mathit{TargetNode},  2  \\mathit{FlowRate}  12000 Don't forget that the \\mathit{SFL} and \\mathit{GFL} mentioned above are also important parameters.For the simplicity, both \\mathit{EdgeID} and \\mathit{FlowID} of the i-th (0-indexed) edge (flow) is always equal to i.",
    "output_details": "In the first line, output the number of your success flows.Next, each line output edge information about the path that a flow passes through. The format is as follows: \\mathit{FlowID}\\ \\mathit{EdgeID}_1\\ \\mathit{EdgeID}_2\\ \\mathit{EdgeID}_3\\ \\dots\\ \\mathit{EdgeID}_n.There is no requirement on the output sequence between flow paths, but edges in one flow must be outputted in order, from source node to target node. Please output all successfully calculated flow paths. For other flows that are not output, the checker determines that you have not found appropriate paths for the flows by default.",
    "sample_input": "le",
    "sample_output": "15 3 1\n0 0 0 1 100 1050\n1 1 0 1 200 2200\n2 1 0 1 200 99400\n3 2 0 3 100 450\n4 3 0 3 500 1120\n5 4 1 2 1000 40000\n6 5 2 3 600 10000\n7 5 2 3 600 10000\n8 6 1 4 120 2500\n9 6 1 4 120 450\n10 7 1 5 170 1250\n11 8 2 5 200 2500\n12 9 3 5 100 1250\n13 10 3 6 300 1150\n14 11 3 7 300 1100\n2 5 7\n2 6 7\n2 6 11\n0 4 6 100",
    "tags": ["*special problem"]
  },
  {
    "name": "Managing Telephone Poles",
    "question_id": "managing-telephone-poles",
    "question": "Mr. Chanek's city can be represented as a plane. He wants to build a housing complex in the city.There are some telephone poles on the plane, which is represented by a grid a of size (n + 1) \\times (m + 1). There is a telephone pole at (x, y) if a_{x, y} = 1.For each point (x, y), define S(x, y) as the square of the Euclidean distance between the nearest pole and (x, y). Formally, the square of the Euclidean distance between two points (x_1, y_1) and (x_2, y_2) is (x_2 - x_1)^2 + (y_2 - y_1)^2.To optimize the building plan, the project supervisor asks you the sum of all S(x, y) for each 0  x  n and 0  y  m. Help him by finding the value of \\sum_{x=0}^{n} {\\sum_{y=0}^{m} {S(x, y)}}.",
    "input_details": "The first line contains two integers n and m (0  n, m < 2000) — the size of the grid.Then (n + 1) lines follow, each containing (m + 1) integers a_{i, j} (0  a_{i, j}  1) — the grid denoting the positions of telephone poles in the plane. There is at least one telephone pole in the given grid.",
    "output_details": "Output an integer denoting the value of \\sum_{x=0}^{n} {\\sum_{y=0}^{m} {S(x, y)}}.",
    "sample_input": "2 2\n101\n000\n000",
    "sample_output": "18",
    "tags": ["data structures", "geometry", "*2400"]
  },
  {
    "name": "Longest Array Deconstruction",
    "question_id": "longest-array-deconstruction",
    "question": "Mr. Chanek gives you a sequence a indexed from 1 to n. Define f(a) as the number of indices where a_i = i. You can pick an element from the current sequence and remove it, then concatenate the remaining elements together. For example, if you remove the 3-rd element from the sequence [4, 2, 3, 1], the resulting sequence will be [4, 2, 1]. You want to remove some elements from a in order to maximize f(a), using zero or more operations. Find the largest possible f(a).",
    "input_details": "The first line contains one integer n (1  n  2 dot 10^5) — the initial length of the sequence.The second line contains n integers a_1, a_2, ......., a_n (1  a_i  2 dot 10^5) — the initial sequence a.",
    "output_details": "Output an integer denoting the largest f(a) that can be obtained by doing zero or more operations.",
    "sample_input": "7\n2 1 4 2 5 3 7",
    "sample_output": "3",
    "tags": ["data structures", "divide and conquer", "dp", "sortings", "*2100"]
  },
  {
    "name": "Knitting Batik",
    "question_id": "knitting-batik",
    "question": "Mr. Chanek wants to knit a batik, a traditional cloth from Indonesia. The cloth forms a grid a with size n \\times m. There are k colors, and each cell in the grid can be one of the k colors.Define a sub-rectangle as an ordered pair of two cells ((x_1, y_1), (x_2, y_2)), denoting the top-left cell and bottom-right cell (inclusively) of a sub-rectangle in a. Two sub-rectangles ((x_1, y_1), (x_2, y_2)) and ((x_3, y_3), (x_4, y_4)) have the same pattern if and only if the following holds:   they have the same width (x_2 - x_1 = x_4 - x_3);  they have the same height (y_2 - y_1 = y_4 - y_3);  for every pair (i, j) where 0  i  x_2 - x_1 and 0  j  y_2 - y_1, the color of cells (x_1 + i, y_1 + j) and (x_3 + i, y_3 + j) are equal. Count the number of possible batik color combinations, such that the subrectangles ((a_x, a_y),(a_x + r - 1, a_y + c - 1)) and ((b_x, b_y),(b_x + r - 1, b_y + c - 1)) have the same pattern.Output the answer modulo 10^9 + 7.",
    "input_details": "The first line contains five integers n, m, k, r, and c (1  n, m  10^9, 1  k  10^9, 1  r  \\min(10^6, n), 1  c  \\min(10^6, m)) — the size of the batik, the number of colors, and size of the sub-rectangle.The second line contains four integers a_x, a_y, b_x, and b_y (1  a_x, b_x  n, 1  a_y, b_y  m) — the top-left corners of the first and second sub-rectangle. Both of the sub-rectangles given are inside the grid (1  a_x + r - 1, b_x + r - 1  n, 1  a_y + c - 1, b_y + c - 1  m).",
    "output_details": "Output an integer denoting the number of possible batik color combinations modulo 10^9 + 7.",
    "sample_input": "3 3 2 2 2\n1 1 2 2",
    "sample_output": "32",
    "tags": ["implementation", "math", "*2200"]
  },
  {
    "name": "Jeopardy of Dropped Balls",
    "question_id": "jeopardy-of-dropped-balls",
    "question": "Mr. Chanek has a new game called Dropping Balls. Initially, Mr. Chanek has a grid a of size n \\times mEach cell (x,y) contains an integer a_{x,y} denoting the direction of how the ball will move.  a_{x,y}=1 — the ball will move to the right (the next cell is (x, y + 1));  a_{x,y}=2 — the ball will move to the bottom (the next cell is (x + 1, y));  a_{x,y}=3 — the ball will move to the left (the next cell is (x, y - 1)). Every time a ball leaves a cell (x,y), the integer a_{x,y} will change to 2. Mr. Chanek will drop k balls sequentially, each starting from the first row, and on the c_1, c_2, \\dots, c_k-th (1  c_i  m) columns.Determine in which column each ball will end up in (position of the ball after leaving the grid).",
    "input_details": "The first line contains three integers n, m, and k (1  n, m  1000, 1  k  10^5) — the size of the grid and the number of balls dropped by Mr. Chanek.The i-th of the next n lines contains m integers a_{i,1},a_{i,2},.......,a_{i,m} (1  a_{i,j}  3). It will satisfy a_{i, 1} \\ne 3 and a_{i, m} \\ne 1.The next line contains k integers c_1, c_2, ......., c_k (1  c_i  m) — the balls' column positions dropped by Mr. Chanek sequentially.",
    "output_details": "Output k integers — the i-th integer denoting the column where the i-th ball will end.",
    "sample_input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1",
    "sample_output": "2 2 1",
    "tags": ["binary search", "brute force", "dsu", "implementation", "*1500"]
  },
  {
    "name": "Illusions of the Desert",
    "question_id": "illusions-of-the-desert",
    "question": "Chanek Jones is back, helping his long-lost relative Indiana Jones, to find a secret treasure in a maze buried below a desert full of illusions.The map of the labyrinth forms a tree with n rooms numbered from 1 to n and n - 1 tunnels connecting them such that it is possible to travel between each pair of rooms through several tunnels.The i-th room (1  i  n) has a_i illusion rate. To go from the x-th room to the y-th room, there must exist a tunnel between x and y, and it takes \\max(|a_x + a_y|, |a_x - a_y|) energy. |z| denotes the absolute value of z.To prevent grave robbers, the maze can change the illusion rate of any room in it. Chanek and Indiana would ask q queries.There are two types of queries to be done:  1\\ u\\ c — The illusion rate of the x-th room is changed to c (1  u  n, 0  |c|  10^9).  2\\ u\\ v — Chanek and Indiana ask you the minimum sum of energy needed to take the secret treasure at room v if they are initially at room u (1  u, v  n). Help them, so you can get a portion of the treasure!",
    "input_details": "The first line contains two integers n and q (2  n  10^5, 1  q  10^5) — the number of rooms in the maze and the number of queries.The second line contains n integers a_1, a_2, ......., a_n (0  |a_i|  10^9) — inital illusion rate of each room.The i-th of the next n-1 lines contains two integers s_i and t_i (1  s_i, t_i  n), meaning there is a tunnel connecting s_i-th room and t_i-th room. The given edges form a tree.The next q lines contain the query as described. The given queries are valid.",
    "output_details": "For each type 2 query, output a line containing an integer — the minimum sum of energy needed for Chanek and Indiana to take the secret treasure.",
    "sample_input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 2\n2 3 3",
    "sample_output": "39\n32\n0",
    "tags": ["data structures", "trees", "*2300"]
  },
  {
    "name": "Holiday Wall Ornaments",
    "question_id": "holiday-wall-ornaments",
    "question": "The Winter holiday will be here soon. Mr. Chanek wants to decorate his house's wall with ornaments. The wall can be represented as a binary string a of length n. His favorite nephew has another binary string b of length m (m  n).Mr. Chanek's nephew loves the non-negative integer k. His nephew wants exactly k occurrences of b as substrings in a. However, Mr. Chanek does not know the value of k. So, for each k (0  k  n - m + 1), find the minimum number of elements in a that have to be changed such that there are exactly k occurrences of b in a.A string s occurs exactly k times in t if there are exactly k different pairs (p,q) such that we can obtain s by deleting p characters from the beginning and q characters from the end of t.",
    "input_details": "The first line contains two integers n and m (1  m  n  500) — size of the binary string a and b respectively.The second line contains a binary string a of length n.The third line contains a binary string b of length m.",
    "output_details": "Output n - m + 2 integers — the (k+1)-th integer denotes the minimal number of elements in a that have to be changed so there are exactly k occurrences of b as a substring in a.",
    "sample_input": "9 3\n100101011\n101",
    "sample_output": "1 1 0 1 6 -1 -1 -1",
    "tags": ["dp", "strings", "*2200"]
  },
  {
    "name": "GCD Festival",
    "question_id": "gcd-festival",
    "question": "Mr. Chanek has an array a of n integers. The prettiness value of a is denoted as:\\sum_{i=1}^{n} {\\sum_{j=1}^{n} {\\gcd(a_i, a_j) dot \\gcd(i, j)}}where \\gcd(x, y) denotes the greatest common divisor (GCD) of integers x and y.In other words, the prettiness value of an array a is the total sum of \\gcd(a_i, a_j) dot \\gcd(i, j) for all pairs (i, j).Help Mr. Chanek find the prettiness value of a, and output the result modulo 10^9 + 7!",
    "input_details": "The first line contains an integer n (2  n  10^5).The second line contains n integers a_1, a_2, ......., a_n (1  a_i  10^5).",
    "output_details": "Output an integer denoting the prettiness value of a modulo 10^9 + 7.",
    "sample_input": "5\n3 6 2 1 4",
    "sample_output": "77",
    "tags": ["math", "number theory", "*2200"]
  },
  {
    "name": "Finding Expected Value",
    "question_id": "finding-expected-value",
    "question": "Mr. Chanek opened a letter from his fellow, who is currently studying at Singanesia. Here is what it says.Define an array b (0  b_i < k) with n integers. While there exists a pair (i, j) such that b_i \\ne b_j, do the following operation:  Randomly pick a number i satisfying 0  i < n. Note that each number i has a probability of \\frac{1}{n} to be picked.  Randomly Pick a number j satisfying 0  j < k.  Change the value of b_i to j. It is possible for b_i to be changed to the same value. Denote f(b) as the expected number of operations done to b until all elements of b are equal. You are given two integers n and k, and an array a (-1  a_i < k) of n integers. For every index i with a_i = -1, replace a_i with a random number j satisfying 0  j < k. Let c be the number of occurrences of -1 in a. There are k^c possibilites of a after the replacement, each with equal probability of being the final array.Find the expected value of f(a) modulo 10^9 + 7. Formally, let M = 10^9 + 7. It can be shown that the answer can be expressed as an irreducible fraction \\frac{p}{q}, where p and q are integers and q \\not \\equiv 0 \\pmod{M}. Output the integer equal to p dot q^{-1} \\bmod M. In other words, output such an integer x that 0  x < M and x dot q \\equiv p \\pmod{M}.After reading the letter, Mr. Chanek gave the task to you. Solve it for the sake of their friendship!",
    "input_details": "The first line contains two integers n and k (2  n  10^5, 2  k  10^9). The second line contains n integers a_1, a_2, ......., a_n (-1  a_i < k).",
    "output_details": "Output an integer denoting the expected value of f(a) modulo 10^9 + 7.",
    "sample_input": "2 2\n0 1",
    "sample_output": "2",
    "tags": ["math", "*2900"]
  },
  {
    "name": "Eye-Pleasing City Park Tour",
    "question_id": "eye-pleasing-city-park-tour",
    "question": "There is a city park represented as a tree with n attractions as its vertices and n - 1 rails as its edges. The i-th attraction has happiness value a_i.Each rail has a color. It is either black if t_i = 0, or white if t_i = 1. Black trains only operate on a black rail track, and white trains only operate on a white rail track. If you are previously on a black train and want to ride a white train, or you are previously on a white train and want to ride a black train, you need to use 1 ticket.The path of a tour must be a simple path — it must not visit an attraction more than once. You do not need a ticket the first time you board a train. You only have k tickets, meaning you can only switch train types at most k times. In particular, you do not need a ticket to go through a path consisting of one rail color.Define f(u, v) as the sum of happiness values of the attractions in the tour (u, v), which is a simple path that starts at the u-th attraction and ends at the v-th attraction. Find the sum of f(u,v) for all valid tours (u, v) (1  u  v  n) that does not need more than k tickets, modulo 10^9 + 7.",
    "input_details": "The first line contains two integers n and k (2  n  2 dot 10^5, 0  k  n-1) — the number of attractions in the city park and the number of tickets you have.The second line contains n integers a_1, a_2,......., a_n (0  a_i  10^9) — the happiness value of each attraction.The i-th of the next n - 1 lines contains three integers u_i, v_i, and t_i (1  u_i, v_i  n, 0  t_i  1) — an edge between vertices u_i and v_i with color t_i. The given edges form a tree.",
    "output_details": "Output an integer denoting the total happiness value for all valid tours (u, v) (1  u  v  n), modulo 10^9 + 7.",
    "sample_input": "5 0\n1 3 2 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0",
    "sample_output": "45",
    "tags": ["data structures", "trees", "*2600"]
  },
  {
    "name": "Divisible by Twenty-Five",
    "question_id": "divisible-by-twenty-five",
    "question": "Mr. Chanek has an integer represented by a string s. Zero or more digits have been erased and are denoted by the character _. There are also zero or more digits marked by the character X, meaning they're the same digit.Mr. Chanek wants to count the number of possible integer s, where s is divisible by 25. Of course, s must not contain any leading zero. He can replace the character _ with any digit. He can also replace the character X with any digit, but it must be the same for every character X.As a note, a leading zero is any 0 digit that comes before the first nonzero digit in a number string in positional notation. For example, 0025 has two leading zeroes. An exception is the integer zero, (0 has no leading zero, but 0000 has three leading zeroes).",
    "input_details": "One line containing the string s (1  |s|  8). The string s consists of the characters 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, _, and X.",
    "output_details": "Output an integer denoting the number of possible integer s.",
    "sample_input": "25",
    "sample_output": "1",
    "tags": ["brute force", "dfs and similar", "dp", "*1800"]
  },
  {
    "name": "Cyclic Sum",
    "question_id": "cyclic-sum",
    "question": "Denote a cyclic sequence of size n as an array s such that s_n is adjacent to s_1. The segment s[r, l] where l < r is the concatenation of s[r, n] and s[1, l].You are given an array a consisting of n integers. Define b as the cyclic sequence obtained from concatenating m copies of a. Note that b has size n dot m.You are given an integer k where k = 1 or k is a prime number. Find the number of different segments in b where the sum of elements in the segment is divisible by k.Two segments are considered different if the set of indices of the segments are different. For example, when n = 3 and m = 2, the set of indices for segment s[2, 5] is \\{2, 3, 4, 5\\}, and for segment s[5, 2] is \\{5, 6, 1, 2\\}. In particular, the segments s[1, 6], s[2,1], ......., s[6, 5] are considered as the same segment.Output the answer modulo 10^9 + 7.",
    "input_details": "The first line contains three integers n, m, and k (1  n, m, k  2 dot 10^5, k = 1 or k is a prime number).The second line contains n integers a_1, a_2, ......., a_n (0  a_i  2 dot 10^5).",
    "output_details": "Output an integer denoting the number of different segments in b where the sum of elements in the segment is divisible by k, modulo 10^9 + 7.",
    "sample_input": "5 1 5\n1 2 3 4 3",
    "sample_output": "4",
    "tags": ["data structures", "fft", "number theory", "*3000"]
  },
  {
    "name": "Building an Amusement Park",
    "question_id": "building-an-amusement-park",
    "question": "Mr. Chanek lives in a city represented as a plane. He wants to build an amusement park in the shape of a circle of radius r. The circle must touch the origin (point (0, 0)).There are n bird habitats that can be a photo spot for the tourists in the park. The i-th bird habitat is at point p_i = (x_i, y_i). Find the minimum radius r of a park with at least k bird habitats inside. A point is considered to be inside the park if and only if the distance between p_i and the center of the park is less than or equal to the radius of the park. Note that the center and the radius of the park do not need to be integers.In this problem, it is guaranteed that the given input always has a solution with r  2 dot 10^5.",
    "input_details": "The first line contains two integers n and k (1  n  10^5, 1  k  n) — the number of bird habitats in the city and the number of bird habitats required to be inside the park.The i-th of the next n lines contains two integers x_i and y_i (0  |x_i|, |y_i|  10^5) — the position of the i-th bird habitat.",
    "output_details": "Output a single real number r denoting the minimum radius of a park with at least k bird habitats inside. It is guaranteed that the given input always has a solution with r  2 dot 10^5.Your answer is considered correct if its absolute or relative error does not exceed 10^{-4}.Formally, let your answer be a, and the jury's answer be b. Your answer is accepted if and only if \\frac{|a - b|}{\\max{(1, |b|)}}  10^{-4}.",
    "sample_input": "8 4\n-3 1\n-4 4\n1 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0",
    "sample_output": "3.1622776589",
    "tags": ["binary search", "geometry", "*2300"]
  },
  {
    "name": "Another Sorting Problem",
    "question_id": "another-sorting-problem",
    "question": "Andi and Budi were given an assignment to tidy up their bookshelf of n books. Each book is represented by the book title — a string s_i numbered from 1 to n, each with length m. Andi really wants to sort the book lexicographically ascending, while Budi wants to sort it lexicographically descending.Settling their fight, they decided to combine their idea and sort it asc-desc-endingly, where the odd-indexed characters will be compared ascendingly, and the even-indexed characters will be compared descendingly.A string a occurs before a string b in asc-desc-ending order if and only if in the first position where a and b differ, the following holds:  if it is an odd position, the string a has a letter that appears earlier in the alphabet than the corresponding letter in b;  if it is an even position, the string a has a letter that appears later in the alphabet than the corresponding letter in b. ",
    "input_details": "The first line contains two integers n and m (1  n dot m  10^6).The i-th of the next n lines contains a string s_i consisting of m uppercase Latin letters — the book title. The strings are pairwise distinct.",
    "output_details": "Output n integers — the indices of the strings after they are sorted asc-desc-endingly.",
    "sample_input": "5 2\nAA\nAB\nBB\nBA\nAZ",
    "sample_output": "5 2 1 3 4",
    "tags": ["data structures", "sortings", "strings", "*1100"]
  },
  {
    "name": "Occurrences",
    "question_id": "occurrences",
    "question": "A subarray of array a from index l to the index r is the array [a_l, a_{l+1}, \\dots, a_{r}]. The number of occurrences of the array b in the array a is the number of subarrays of a such that they are equal to b.You are given n arrays A_1, A_2, \\dots, A_n; the elements of these arrays are integers from 1 to k. You have to build an array a consisting of m integers from 1 to k in such a way that, for every given subarray A_i, the number of occurrences of A_i in the array a is not less than the number of occurrences of each non-empty subarray of A_i in a. Note that if A_i doesn't occur in a, and no subarray of A_i occurs in a, this condition is still met for A_i.Your task is to calculate the number of different arrays a you can build, and print it modulo 998244353.",
    "input_details": "The first line contains three integers n, m and k (1  n, m, k  3 dot 10^5) — the number of the given arrays, the desired length of the array a, and the upper bound on the values in the arrays.Then n lines follow. The i-th line represents the array A_i. The first integer in the i-th line is c_i (1  c_i  m) — the number of elements in A_i; then, c_i integers from 1 to k follow — the elements of the array A_i.Additional constraint on the input: \\sum\\limits_{i=1}^n c_i  3 dot 10^5; i. e., the number of elements in the given arrays in total does not exceed 3 dot 10^5.",
    "output_details": "Print one integer — the number of different arrays a you can build, taken modulo 998244353.",
    "sample_input": "2 4 3\n2 1 2\n1 3",
    "sample_output": "5",
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "*2700"
    ]
  },
  {
    "name": "Coloring",
    "question_id": "coloring",
    "question": "A matrix of size n \\times m, such that each cell of it contains either 0 or 1, is considered beautiful if the sum in every contiguous submatrix of size 2 \\times 2 is exactly 2, i. e. every \"square\" of size 2 \\times 2 contains exactly two 1's and exactly two 0's.You are given a matrix of size n \\times m. Initially each cell of this matrix is empty. Let's denote the cell on the intersection of the x-th row and the y-th column as (x, y). You have to process the queries of three types:  x y -1 — clear the cell (x, y), if there was a number in it;  x y 0 — write the number 0 in the cell (x, y), overwriting the number that was there previously (if any);  x y 1 — write the number 1 in the cell (x, y), overwriting the number that was there previously (if any). After each query, print the number of ways to fill the empty cells of the matrix so that the resulting matrix is beautiful. Since the answers can be large, print them modulo 998244353.",
    "input_details": "The first line contains three integers n, m and k (2  n, m  10^6; 1  k  3 dot 10^5) — the number of rows in the matrix, the number of columns, and the number of queries, respectively.Then k lines follow, the i-th of them contains three integers x_i, y_i, t_i (1  x_i  n; 1  y_i  m; -1  t_i  1) — the parameters for the i-th query.",
    "output_details": "For each query, print one integer — the number of ways to fill the empty cells of the matrix after the respective query, taken modulo 998244353.",
    "sample_input": "2 2 7\n1 1 1\n1 2 1\n2 1 1\n1 1 0\n1 2 -1\n2 1 -1\n1 1 -1",
    "sample_output": "3\n1\n0\n1\n2\n3\n6",
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "*2500"
    ]
  },
  {
    "name": "The Strongest Build",
    "question_id": "the-strongest-build",
    "question": "Ivan is playing yet another roguelike computer game. He controls a single hero in the game. The hero has n equipment slots. There is a list of c_i items for the i-th slot, the j-th of them increases the hero strength by a_{i,j}. The items for each slot are pairwise distinct and are listed in the increasing order of their strength increase. So, a_{i,1} < a_{i,2} < \\dots < a_{i,c_i}.For each slot Ivan chooses exactly one item. Let the chosen item for the i-th slot be the b_i-th item in the corresponding list. The sequence of choices [b_1, b_2, \\dots, b_n] is called a build.The strength of a build is the sum of the strength increases of the items in it. Some builds are banned from the game. There is a list of m pairwise distinct banned builds. It's guaranteed that there's at least one build that's not banned.What is the build with the maximum strength that is not banned from the game? If there are multiple builds with maximum strength, print any of them.",
    "input_details": "The first line contains a single integer n (1  n  10) — the number of equipment slots.The i-th of the next n lines contains the description of the items for the i-th slot. First, one integer c_i (1  c_i  2 dot 10^5) — the number of items for the i-th slot. Then c_i integers a_{i,1}, a_{i,2}, \\dots, a_{i,c_i} (1  a_{i,1} < a_{i,2} < \\dots < a_{i,c_i}  10^8).The sum of c_i doesn't exceed 2 dot 10^5.The next line contains a single integer m (0  m  10^5) — the number of banned builds.Each of the next m lines contains a description of a banned build — a sequence of n integers b_1, b_2, \\dots, b_n (1  b_i  c_i).The builds are pairwise distinct, and there's at least one build that's not banned.",
    "output_details": "Print the build with the maximum strength that is not banned from the game. If there are multiple builds with maximum strength, print any of them.",
    "sample_input": "3\n3 1 2 3\n2 1 5\n3 2 4 6\n2\n3 2 3\n3 2 2",
    "sample_output": "2 2 3",
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation",
      "*2000"
    ]
  },
  {
    "name": "Slay the Dragon",
    "question_id": "slay-the-dragon",
    "question": "Recently, Petya learned about a new game \"Slay the Dragon\". As the name suggests, the player will have to fight with dragons. To defeat a dragon, you have to kill it and defend your castle. To do this, the player has a squad of n heroes, the strength of the i-th hero is equal to a_i.According to the rules of the game, exactly one hero should go kill the dragon, all the others will defend the castle. If the dragon's defense is equal to x, then you have to send a hero with a strength of at least x to kill it. If the dragon's attack power is y, then the total strength of the heroes defending the castle should be at least y.The player can increase the strength of any hero by 1 for one gold coin. This operation can be done any number of times.There are m dragons in the game, the i-th of them has defense equal to x_i and attack power equal to y_i. Petya was wondering what is the minimum number of coins he needs to spend to defeat the i-th dragon.Note that the task is solved independently for each dragon (improvements are not saved).",
    "input_details": "The first line contains a single integer n (2  n  2 dot 10^5) — number of heroes.The second line contains n integers a_1, a_2, \\dots, a_n (1  a_i  10^{12}), where a_i is the strength of the i-th hero.The third line contains a single integer m (1  m  2 dot 10^5) — the number of dragons.The next m lines contain two integers each, x_i and y_i (1  x_i  10^{12}; 1  y_i  10^{18}) — defense and attack power of the i-th dragon.",
    "output_details": "Print m lines, i-th of which contains a single integer — the minimum number of coins that should be spent to defeat the i-th dragon.",
    "sample_input": "4\n3 6 2 3\n5\n3 12\n7 9\n4 14\n1 10\n8 7",
    "sample_output": "1\n2\n4\n0\n2",
    "tags": ["binary search", "greedy", "sortings", "ternary search", "*1300"]
  },
  {
    "name": "Combinatorics Homework",
    "question_id": "combinatorics-homework",
    "question": "You are given four integer values a, b, c and m.Check if there exists a string that contains:   a letters 'A';  b letters 'B';  c letters 'C';  no other letters;  exactly m pairs of adjacent equal letters (exactly m such positions i that the i-th letter is equal to the (i+1)-th one). ",
    "input_details": "The first line contains a single integer t (1  t  10^4) — the number of testcases.Each of the next t lines contains the description of the testcase — four integers a, b, c and m (1  a, b, c  10^8; 0  m  10^8).",
    "output_details": "For each testcase print \"YES\" if there exists a string that satisfies all the requirements. Print \"NO\" if there are no such strings.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).",
    "sample_input": "3\n2 2 1 0\n1 1 1 1\n1 2 3 2",
    "sample_output": "YES\nNO\nYES",
    "tags": ["combinatorics", "greedy", "math", "*1100"]
  },
  {
    "name": "Regular Bracket Sequences",
    "question_id": "regular-bracket-sequences",
    "question": "A bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\"), and \")(\", \"(\" and \")\" are not.You are given an integer n. Your goal is to construct and print exactly n different regular bracket sequences of length 2n.",
    "input_details": "The first line contains one integer t (1  t  50) — the number of test cases.Each test case consists of one line containing one integer n (1  n  50).",
    "output_details": "For each test case, print n lines, each containing a regular bracket sequence of length exactly 2n. All bracket sequences you output for a testcase should be different (though they may repeat in different test cases). If there are multiple answers, print any of them. It can be shown that it's always possible.",
    "sample_input": "3\n3\n1\n3",
    "sample_output": "()()()\n((()))\n(()())\n()\n((()))\n(())()\n()(())",
    "tags": ["constructive algorithms", "*800"]
  }
]
